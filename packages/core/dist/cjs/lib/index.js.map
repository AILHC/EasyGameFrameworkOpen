{"version":3,"file":"index.js","sources":["../../../src/egf-app.ts"],"sourcesContent":["export class App<ModuleMap = any> implements egf.IApp<ModuleMap> {\n    public static readonly UN_RUN: number = 0;\n    public static readonly BOOTING: number = 1;\n    public static readonly BOOTEND: number = 2;\n    public static readonly RUNING: number = 3;\n    public static readonly STOP: number = 4;\n    protected _state: number = 0;\n    protected _moduleMap: { [key: string]: egf.IModule } = {};\n    public get state(): number {\n        return this._state;\n    }\n    public get moduleMap(): ModuleMap {\n        return this._moduleMap as any;\n    }\n    public async bootstrap(bootLoaders?: egf.IBootLoader[]): Promise<boolean> {\n        this.setState(App.BOOTING);\n        if (!bootLoaders || bootLoaders.length <= 0) {\n            this.setState(App.BOOTEND);\n            return true;\n        }\n        if (bootLoaders && bootLoaders.length > 0) {\n            const bootPromises: Promise<void>[] = [];\n            for (let i = 0; i < bootLoaders.length; i++) {\n                const bootLoader: egf.IBootLoader = bootLoaders[i];\n                bootPromises.push(\n                    new Promise((res, rej) => {\n                        bootLoader.onBoot(this as any, (isOk) => {\n                            if (isOk) {\n                                res();\n                            } else {\n                                rej();\n                            }\n                        });\n                    })\n                );\n            }\n            try {\n                await Promise.all(bootPromises);\n                this.setState(App.BOOTEND);\n                return true;\n            } catch (e) {\n                console.error(e);\n                this.setState(App.BOOTEND);\n                return false;\n            }\n        }\n    }\n\n    public init(): void {\n        const moduleMap = this._moduleMap;\n        let moduleIns: egf.IModule;\n        if (this.state === App.RUNING) return;\n        for (const key in moduleMap) {\n            moduleIns = moduleMap[key];\n            moduleIns.onInit && moduleIns.onInit(this as any);\n        }\n        for (const key in moduleMap) {\n            moduleIns = moduleMap[key];\n            moduleIns.onAfterInit && moduleIns.onAfterInit(this as any);\n        }\n        this.setState(App.RUNING);\n    }\n    public loadModule(moduleIns: any | egf.IModule, key?: keyof ModuleMap): boolean {\n        if (this._state === App.STOP) return false;\n        let res: boolean = false;\n        if (!key) {\n            key = moduleIns.key as never;\n        }\n        if (key && typeof key === \"string\") {\n            if (moduleIns) {\n                if (!this._moduleMap[key]) {\n                    this._moduleMap[key] = moduleIns;\n                    res = true;\n                    if (this._state === App.RUNING) {\n                        moduleIns.onInit && moduleIns.onInit(this);\n                        moduleIns.onAfterInit && moduleIns.onAfterInit();\n                    }\n                } else {\n                    this._log(`加载模块:模块:${key}已经存在,不重复加载`);\n                }\n            } else {\n                this._log(`加载模块:模块:${key}实例为空`);\n            }\n        } else {\n            this._log(`加载模块:模块key为空`);\n        }\n        return res;\n    }\n    public hasModule(moduleKey: keyof ModuleMap): boolean {\n        return !!this._moduleMap[moduleKey as any];\n    }\n    public stop(): void {\n        const moduleMap = this._moduleMap;\n        let moduleIns: egf.IModule;\n        this.setState(App.STOP);\n        for (const key in moduleMap) {\n            moduleIns = moduleMap[key];\n            moduleIns.onStop && moduleIns.onStop();\n        }\n    }\n    public getModule<K extends keyof ModuleMap>(moduleKey: K): ModuleMap[K] {\n        return this._moduleMap[moduleKey as any] as any;\n    }\n\n    protected setState(state: number) {\n        if (!isNaN(this._state)) {\n            if (this._state >= state) return;\n        }\n        this._state = state;\n    }\n    /**\n     * 输出\n     * @param level 1 warn 2 error\n     * @param msg\n     */\n    protected _log(msg: string, level?: number): void {\n        switch (level) {\n            case 1:\n                console.warn(`【主程序】${msg}`);\n                break;\n            case 2:\n                console.error(`【主程序】${msg}`);\n                break;\n            default:\n                console.warn(`【主程序】${msg}`);\n                break;\n        }\n    }\n}\n"],"names":[],"mappings":"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"}