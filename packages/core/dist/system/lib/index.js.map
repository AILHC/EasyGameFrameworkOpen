{"version":3,"file":"index.js","sources":["../../../src/egf-app.ts"],"sourcesContent":["export class App<ModuleMap = any> implements egf.IApp<ModuleMap> {\r\n    public static readonly UN_RUN: number = 0;\r\n    public static readonly BOOTING: number = 1;\r\n    public static readonly BOOTEND: number = 2;\r\n    public static readonly RUNING: number = 3;\r\n    public static readonly STOP: number = 4;\r\n    protected _state: number = 0;\r\n    protected _moduleMap: { [key: string]: egf.IModule } = {};\r\n    protected _proxyModuleMap: { [key: string]: egf.IModule };\r\n    public get state(): number {\r\n        return this._state;\r\n    }\r\n    public get moduleMap(): ModuleMap {\r\n        const moduleMap = this._moduleMap;\r\n        if (!this._proxyModuleMap) {\r\n            this._proxyModuleMap = new Proxy(moduleMap, {\r\n                get(target, key) {\r\n                    if (typeof key === \"string\") {\r\n                        return moduleMap[key];\r\n                    } else {\r\n                        return null;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this._proxyModuleMap as any;\r\n    }\r\n    public async bootstrap(bootLoaders?: egf.IBootLoader[]): Promise<boolean> {\r\n        this.setState(App.BOOTING);\r\n        if (!bootLoaders || bootLoaders.length <= 0) {\r\n            this.setState(App.BOOTEND);\r\n            return true;\r\n        }\r\n        if (bootLoaders && bootLoaders.length > 0) {\r\n            const bootPromises: Promise<boolean>[] = [];\r\n            for (let i = 0; i < bootLoaders.length; i++) {\r\n                const bootLoader: egf.IBootLoader = bootLoaders[i];\r\n                bootPromises.push(new Promise((res, rej) => {\r\n                    bootLoader.onBoot(this as any, (isOk) => {\r\n                        if (isOk) {\r\n                            res();\r\n                        } else {\r\n                            rej();\r\n                        }\r\n                    });\r\n                }));\r\n            }\r\n            try {\r\n                await Promise.all(bootPromises);\r\n                this.setState(App.BOOTEND);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                console.error(e);\r\n                this.setState(App.BOOTEND);\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    public init(): void {\r\n        const moduleMap = this._moduleMap;\r\n        let moduleIns: egf.IModule;\r\n        if (this.state === App.RUNING) return;\r\n        for (const key in moduleMap) {\r\n            moduleIns = moduleMap[key];\r\n            moduleIns.onInit && moduleIns.onInit(this as any);\r\n        }\r\n        for (const key in moduleMap) {\r\n            moduleIns = moduleMap[key];\r\n            moduleIns.onAfterInit && moduleIns.onAfterInit(this as any);\r\n        }\r\n        this.setState(App.RUNING);\r\n    }\r\n    public loadModule(moduleIns: any | egf.IModule, key?: keyof ModuleMap): boolean {\r\n        if (this._state === App.STOP) return false;\r\n        let res: boolean = false;\r\n        if (!key) {\r\n            key = moduleIns.key as never;\r\n        }\r\n        if (key && typeof key === \"string\") {\r\n            if (moduleIns) {\r\n                if (!this._moduleMap[key]) {\r\n                    this._moduleMap[key] = moduleIns;\r\n                    res = true;\r\n                    if (this._state === App.RUNING) {\r\n                        moduleIns.onInit && moduleIns.onInit(this);\r\n                        moduleIns.onAfterInit && moduleIns.onAfterInit();\r\n                    }\r\n                } else {\r\n                    this._log(`加载模块:模块:${key}已经存在,不重复加载`);\r\n                }\r\n            } else {\r\n                this._log(`加载模块:模块:${key}实例为空`);\r\n            }\r\n        } else {\r\n            this._log(`加载模块:模块key为空`);\r\n        }\r\n        return res;\r\n    }\r\n    public hasModule(moduleKey: keyof ModuleMap): boolean {\r\n        return !!this._moduleMap[moduleKey as any];\r\n    }\r\n    public stop(): void {\r\n        const moduleMap = this._moduleMap;\r\n        let moduleIns: egf.IModule;\r\n        this.setState(App.STOP);\r\n        for (const key in moduleMap) {\r\n            moduleIns = moduleMap[key];\r\n            moduleIns.onStop && moduleIns.onStop();\r\n        }\r\n    }\r\n    public getModule<K extends keyof ModuleMap>(moduleKey: K): ModuleMap[K] {\r\n        return this._moduleMap[moduleKey as any] as any;\r\n    }\r\n\r\n    protected setState(state: number) {\r\n        this._state = state;\r\n    }\r\n    /**\r\n     * 输出\r\n     * @param level 1 warn 2 error\r\n     * @param msg \r\n     */\r\n    protected _log(msg: string, level?: number): void {\r\n        switch (level) {\r\n            case 1:\r\n                console.warn(`【主程序】${msg}`);\r\n                break;\r\n            case 2:\r\n                console.error(`【主程序】${msg}`);\r\n                break;\r\n            default:\r\n                console.warn(`【主程序】${msg}`);\r\n                break;\r\n        }\r\n    };\r\n\r\n}"],"names":[],"mappings":"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"}