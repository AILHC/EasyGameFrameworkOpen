{"version":3,"file":"index.mjs","sources":["../../../src/layer-mgr.ts"],"sourcesContent":["type LayerClassType = layer.LayerClassType;\n\nexport class LayerMgr<T> implements layer.IMgr<T> {\n\n\n    protected layerEnum: any;\n    protected classMap: Map<string, LayerClassType>;\n    protected defaultType: LayerClassType;\n    protected _layerMap: Map<number, layer.ILayer | any>;\n    private _root: T;\n\n    public init(layerEnum: any,\n        defaultClass: LayerClassType\n        , classMap?: Map<string, LayerClassType>\n        , root?: T) {\n        if (root) this._root = root;\n        this.layerEnum = layerEnum;\n        this.defaultType = defaultClass;\n        this.classMap = classMap;\n        const len = Object.keys(layerEnum).length / 2;\n        let layerClassNameAndLayerName: string[];\n        let layerName: string;\n        let layer: layer.ILayer;\n        let clas: LayerClassType;\n        let className: string;\n        for (let i = 0; i < len; i++) {\n            layerClassNameAndLayerName = layerEnum[i].split(\"_\");\n            className = layerClassNameAndLayerName[0];\n            layerName = layerClassNameAndLayerName[1]\n            if (!layerName) {\n                layerName = className;\n            }\n            if (classMap && this.classMap.has(className)) {\n                clas = this.classMap.get(className);\n            } else {\n                clas = defaultClass;\n            }\n            layer = new clas();\n            layer.onInit(layerName, i, this);\n            this.addLayer(layer);\n        }\n    }\n    public setLayerRoot(root: T): void {\n        if (!root) return;\n        this._root = root;\n        if (this._layerMap) {\n            this._layerMap.forEach((value: layer.ILayer) => {\n                value.onAdd(root);\n            })\n        }\n    }\n    public get root(): T {\n        return this._root;\n    }\n\n    public get layerMap(): Map<number, layer.ILayer | any> {\n        return this._layerMap;\n    }\n    public addLayer(layer: layer.ILayer): boolean {\n        if (!this._layerMap) {\n            this._layerMap = new Map();\n        }\n        const layerType = layer.layerType;\n        if (this._layerMap.has(layerType)) {\n            console.warn(`【层级管理器】重复添加层级 type:${layerType},name:${layer.layerName}`);\n            return false;\n        }\n        this._layerMap.set(layerType, layer);\n        if (this._root) {\n            layer.onAdd(this._root);\n        }\n        return true;\n    }\n    public removeLayer(layerType: number): boolean {\n        if (!this._layerMap || !this._layerMap.has(layerType)) {\n            return false;\n        }\n        const layer: layer.ILayer = this._layerMap.get(layerType);\n        layer.onDestroy && layer.onDestroy();\n        this._layerMap.delete(layerType);\n        return true;\n    }\n    public hideLayer(layerType: number): void {\n        const layer = this.getLayerByType(layerType);\n        if (layer) {\n            layer.onHide();\n        }\n    }\n    public showLayer(layerType: number): void {\n        const layer = this.getLayerByType(layerType);\n        if (layer) {\n            layer.onShow();\n        }\n    }\n    public addNodeToLayer(node: T, layerType: number): void {\n        const layer = this.getLayerByType(layerType);\n        if (layer) {\n            layer.onNodeAdd(node);\n        }\n    }\n\n    public getLayerByType<T extends layer.ILayer>(layerType: number): T {\n        const layer = this._layerMap.get(layerType);\n        if (!layer) {\n            console.warn(`【层级管理器】没有这个层级:${this.layerEnum[layerType]},${layerType}`);\n        }\n        return layer;\n    }\n\n\n}"],"names":[],"mappings":"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"}