{"version":3,"file":"index.js","sources":["../../../src/layer-mgr.ts"],"sourcesContent":["type LayerClassType = layer.LayerClassType;\n\nexport class LayerMgr<T> implements layer.IMgr<T> {\n\n\n    protected layerEnum: any;\n    protected classMap: Map<string, LayerClassType>;\n    protected defaultType: LayerClassType;\n    protected _layerMap: Map<number, layer.ILayer | any>;\n    private _root: T;\n\n    public init(layerEnum: any,\n        defaultClass: LayerClassType\n        , classMap?: Map<string, LayerClassType>\n        , root?: T) {\n        if (root) this._root = root;\n        this.layerEnum = layerEnum;\n        this.defaultType = defaultClass;\n        this.classMap = classMap;\n        const len = Object.keys(layerEnum).length / 2;\n        let layerClassNameAndLayerName: string[];\n        let layerName: string;\n        let layer: layer.ILayer;\n        let clas: LayerClassType;\n        let className: string;\n        for (let i = 0; i < len; i++) {\n            layerClassNameAndLayerName = layerEnum[i].split(\"_\");\n            className = layerClassNameAndLayerName[0];\n            layerName = layerClassNameAndLayerName[1]\n            if (!layerName) {\n                layerName = className;\n            }\n            if (classMap && this.classMap.has(className)) {\n                clas = this.classMap.get(className);\n            } else {\n                clas = defaultClass;\n            }\n            layer = new clas();\n            layer.onInit(layerName, i, this);\n            this.addLayer(layer);\n        }\n    }\n    public setLayerRoot(root: T): void {\n        if (!root) return;\n        this._root = root;\n        if (this._layerMap) {\n            this._layerMap.forEach((value: layer.ILayer) => {\n                value.onAdd(root);\n            })\n        }\n    }\n    public get root(): T {\n        return this._root;\n    }\n\n    public get layerMap(): Map<number, layer.ILayer | any> {\n        return this._layerMap;\n    }\n    public addLayer(layer: layer.ILayer): boolean {\n        if (!this._layerMap) {\n            this._layerMap = new Map();\n        }\n        const layerType = layer.layerType;\n        if (this._layerMap.has(layerType)) {\n            console.warn(`【层级管理器】重复添加层级 type:${layerType},name:${layer.layerName}`);\n            return false;\n        }\n        this._layerMap.set(layerType, layer);\n        if (this._root) {\n            layer.onAdd(this._root);\n        }\n        return true;\n    }\n    public removeLayer(layerType: number): boolean {\n        if (!this._layerMap || !this._layerMap.has(layerType)) {\n            return false;\n        }\n        const layer: layer.ILayer = this._layerMap.get(layerType);\n        layer.onDestroy && layer.onDestroy();\n        this._layerMap.delete(layerType);\n        return true;\n    }\n    public hideLayer(layerType: number): void {\n        const layer = this.getLayerByType(layerType);\n        if (layer) {\n            layer.onHide();\n        }\n    }\n    public showLayer(layerType: number): void {\n        const layer = this.getLayerByType(layerType);\n        if (layer) {\n            layer.onShow();\n        }\n    }\n    public addNodeToLayer(node: T, layerType: number): void {\n        const layer = this.getLayerByType(layerType);\n        if (layer) {\n            layer.onNodeAdd(node);\n        }\n    }\n\n    public getLayerByType<T extends layer.ILayer>(layerType: number): T {\n        const layer = this._layerMap.get(layerType);\n        if (!layer) {\n            console.warn(`【层级管理器】没有这个层级:${this.layerEnum[layerType]},${layerType}`);\n        }\n        return layer;\n    }\n\n\n}"],"names":[],"mappings":"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"}