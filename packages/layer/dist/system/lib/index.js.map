{"version":3,"file":"index.js","sources":["../../../src/layer-mgr.ts"],"sourcesContent":["type LayerClassType = egf.LayerClassType;\n\nexport class LayerMgr<T> implements egf.ILayerMgr<T> {\n\n\n    protected layerEnum: any;\n    protected classMap: Map<string, LayerClassType>;\n    protected defaultType: LayerClassType;\n    protected _layerMap: Map<number, egf.ILayer | any>;\n    private _root: T;\n\n    public init(root: T, layerEnum: any,\n        defaultClass: LayerClassType\n        , classMap?: Map<string, LayerClassType>) {\n        this._root = root;\n        this.layerEnum = layerEnum;\n        this.defaultType = defaultClass;\n        this.classMap = classMap;\n        const len = Object.keys(layerEnum).length / 2;\n        let layerClassNameAndLayerName: string[];\n        let layerName: string;\n        let layer: egf.ILayer;\n        let clas: LayerClassType;\n        let className: string;\n        for (let i = 0; i < len; i++) {\n            layerClassNameAndLayerName = layerEnum[i].split(\"_\");\n            className = layerClassNameAndLayerName[0];\n            layerName = layerClassNameAndLayerName[1]\n            if (!layerName) {\n                layerName = className;\n            }\n            if (classMap && this.classMap.has(className)) {\n                clas = this.classMap.get(className);\n            } else {\n                clas = defaultClass;\n            }\n            layer = new clas();\n            layer.onInit(layerName, i, this);\n            this.addLayer(layer);\n        }\n    }\n    public get root(): T {\n        return this._root;\n    }\n\n    public get layerMap(): Map<number, egf.ILayer | any> {\n        return this._layerMap;\n    }\n    public addLayer(layer: egf.ILayer): boolean {\n        if (!this._layerMap) {\n            this._layerMap = new Map();\n        }\n        const layerType = layer.layerType;\n        if (this._layerMap.has(layerType)) {\n            console.warn(`【层级管理器】重复添加层级 type:${layerType},name:${layer.layerName}`);\n            return false;\n        }\n        this._layerMap.set(layerType, layer);\n        layer.onAdd(this._root);\n        return true;\n    }\n    public removeLayer(layerType: number): boolean {\n        if (!this._layerMap || !this._layerMap.has(layerType)) {\n            return false;\n        }\n        const layer: egf.ILayer = this._layerMap.get(layerType);\n        layer.onDestroy && layer.onDestroy();\n        this._layerMap.delete(layerType);\n        return true;\n    }\n    public hideLayer(layerType: number): void {\n        const layer = this.getLayerByType(layerType);\n        if (layer) {\n            layer.onHide();\n        }\n    }\n    public showLayer(layerType: number): void {\n        const layer = this.getLayerByType(layerType);\n        if (layer) {\n            layer.onShow();\n        }\n    }\n    public addNodeToLayer(node: T, layerType: number): void {\n        const layer = this.getLayerByType(layerType);\n        if (layer) {\n            layer.onNodeAdd(node);\n        }\n    }\n\n    public getLayerByType<T extends egf.ILayer>(layerType: number): T {\n        const layer = this._layerMap.get(layerType);\n        if (!layer) {\n            console.warn(`【层级管理器】没有这个层级:${this.layerEnum[layerType]},${layerType}`);\n        }\n        return layer;\n    }\n\n\n}"],"names":[],"mappings":"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"}