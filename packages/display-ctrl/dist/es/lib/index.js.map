{"version":3,"file":"index.js","sources":["../../../src/base-dp-ctrl.ts","../../../src/dp-ctrl-mgr.ts"],"sourcesContent":["export class BaseDpCtrl<NodeType = any> implements displayCtrl.ICtrl<NodeType> {\n    protected _dpcMgr: displayCtrl.IMgr;\n    public key: string;\n    protected _node: NodeType;\n    constructor(dpcMgr?: displayCtrl.IMgr) {\n        this._dpcMgr = dpcMgr;\n    }\n\n    public needLoad: boolean = true;\n    public isLoaded: boolean = false;\n    public isLoading: boolean = false;\n    protected _isAsyncShow: boolean = false;\n\n    public isInited: boolean = false;\n    public isShowing: boolean = false;\n    public isShowed: boolean = false;\n    public needShow: boolean = false;\n    public get isAsyncShow() {\n        return this._isAsyncShow;\n    }\n    public onInit(initData?: any): void {\n    }\n    public onShow(showData?: any, endCb?: VoidFunction): void {\n        endCb && endCb();\n    }\n    public onUpdate(updateData?: any): void {\n    }\n    public getFace<T>(): T {\n        return this as any;\n    }\n    public onHide(): void {\n    }\n    public forceHide(): void {\n\n    }\n    public getNode() {\n        return this._node;\n    }\n    public onDestroy(destroyRes?: boolean): void {\n    }\n    public getRess(): string[] {\n        return null;\n    }\n}","/**\n * DisplayControllerMgr\n * 显示控制类管理器基类\n */\nexport class DpcMgr<CtrlKeyMap = any> implements displayCtrl.IMgr<CtrlKeyMap> {\n    ctrls: CtrlKeyMap = new Proxy({}, {\n        get(target, key) {\n            return key;\n        }\n    }) as any;\n    /**\n     * 单例缓存字典 key:ctrlKey,value:egf.IDpCtrl\n     */\n    protected _sigCtrlCache: displayCtrl.CtrlInsMap = {};\n    protected _sigCtrlShowCfgMap: { [key: string]: displayCtrl.IShowConfig } = {};\n    protected _resLoadHandler: displayCtrl.ResLoadHandler;\n    /**\n     * 控制器类字典\n     */\n    protected _ctrlClassMap: { [key: string]: displayCtrl.CtrlClassType<displayCtrl.ICtrl> } = {};\n    public get sigCtrlCache(): displayCtrl.CtrlInsMap {\n        return this._sigCtrlCache;\n    }\n    public getCtrlClass(typeKey: string): displayCtrl.CtrlClassType<displayCtrl.ICtrl> {\n        const clas = this._ctrlClassMap[typeKey];\n        return clas;\n    }\n    public init(resLoadHandler?: displayCtrl.ResLoadHandler): void {\n        if (!this._resLoadHandler) {\n            this._resLoadHandler = resLoadHandler;\n        }\n    }\n    public registTypes(classes: displayCtrl.CtrlClassMap | displayCtrl.CtrlClassType[]) {\n        if (classes) {\n            if (typeof classes.length === \"number\" && classes.length) {\n                for (let i = 0; i < classes.length; i++) {\n                    this.regist(classes[i]);\n                }\n            } else {\n                for (const typeKey in classes) {\n                    this.regist(classes[typeKey], typeKey)\n                }\n            }\n\n        }\n\n    }\n    public regist(ctrlClass: displayCtrl.CtrlClassType, typeKey?: string) {\n        const classMap = this._ctrlClassMap;\n        if (!ctrlClass.typeKey) {\n            if (!typeKey) {\n                console.error(`typeKey is null`);\n                return;\n            } else {\n                (ctrlClass as any)[\"typeKey\"] = typeKey;\n            }\n        }\n        if (classMap[ctrlClass.typeKey]) {\n            console.error(`type:${ctrlClass.typeKey} is exit`);\n        } else {\n            classMap[ctrlClass.typeKey] = ctrlClass;\n        }\n    }\n    public isRegisted(typeKey: string) {\n        return !!this._ctrlClassMap[typeKey];\n    }\n\n    //单例操作\n\n    public getSigDpcRess(typeKey: string): string[] {\n        const ctrlIns = this.getSigDpcIns(typeKey);\n        if (ctrlIns) {\n            return ctrlIns.getRess();\n        }\n        return null;\n    }\n    public loadSigDpc<T extends displayCtrl.ICtrl = any>(loadCfg: string | displayCtrl.ILoadConfig): T {\n        loadCfg = this._getCfg(loadCfg);\n        const ctrlIns = this.getSigDpcIns(loadCfg);\n        if (ctrlIns) {\n            this.loadDpcByIns(ctrlIns, loadCfg);\n        }\n        return ctrlIns as any;\n    }\n    public getSigDpcIns<T extends displayCtrl.ICtrl = any>(cfg: string | displayCtrl.IKeyConfig): T {\n        cfg = this._getCfg(cfg);\n        const sigCtrlCache = this._sigCtrlCache;\n        if (!cfg.key) return null;\n        let ctrlIns = sigCtrlCache[cfg.key];\n        if (!ctrlIns) {\n            ctrlIns = ctrlIns ? ctrlIns : this.insDpc(cfg);\n            ctrlIns && (sigCtrlCache[cfg.key] = ctrlIns);\n        }\n        return ctrlIns as any;\n    }\n    public initSigDpc<T extends displayCtrl.ICtrl = any>(cfg: string | displayCtrl.IInitConfig): T {\n        let ctrlIns: displayCtrl.ICtrl;\n        cfg = this._getCfg<displayCtrl.IInitConfig>(cfg);\n        ctrlIns = this.getSigDpcIns(cfg);\n        if (ctrlIns && ctrlIns.isLoaded && !ctrlIns.isInited) {\n            ctrlIns.onInit(cfg.onInitData);\n            ctrlIns.isInited = true;\n        }\n        return ctrlIns as any;\n    }\n    public showDpc<T extends displayCtrl.ICtrl = any>(showCfg: string | displayCtrl.IShowConfig): T {\n        showCfg = this._getCfg(showCfg);\n        const ins = this.getSigDpcIns(showCfg);\n        if (!ins) {\n            console.error(`没有注册:typeKey:${showCfg.typeKey}`);\n            return null;\n        };\n        const showTypeKey = ins.key;\n        if (ins.isShowed) {\n            return;\n        }\n        ins.needShow = true;\n        const sigCtrlShowCfgMap = this._sigCtrlShowCfgMap;\n        const oldShowCfg = sigCtrlShowCfgMap[ins.key];\n        if (oldShowCfg) {\n            oldShowCfg.onCancel && oldShowCfg.onCancel();\n            Object.assign(oldShowCfg, showCfg);\n        } else {\n            sigCtrlShowCfgMap[ins.key] = showCfg;\n        }\n        if (ins.needLoad) {\n            ins.isLoaded = false;\n        } else if (!ins.isLoaded && !ins.isLoading) {\n            ins.needLoad = true;\n        }\n        //需要加载\n        if (ins.needLoad) {\n            const preloadCfg = showCfg as displayCtrl.ILoadConfig;\n            preloadCfg.loadCb = (loadedIns) => {\n                const loadedShowCfg = sigCtrlShowCfgMap[showTypeKey];\n                if (loadedIns.needShow) {\n                    this.initDpcByIns(loadedIns, loadedShowCfg.onInitData);\n                    this.showDpcByIns(loadedIns, loadedShowCfg);\n                }\n                delete sigCtrlShowCfgMap[showTypeKey];\n            }\n            ins.needLoad = false;\n            this._loadRess(ins, preloadCfg);\n\n        } else {\n            if (!ins.isInited) {\n                this.initDpcByIns(ins, showCfg.onInitData);\n            }\n            if (ins.isInited) {\n                this.showDpcByIns(ins, showCfg);\n            }\n        }\n        return ins as T;\n    }\n    public updateDpc<K>(key: string, updateData?: K): void {\n        if (!key) {\n            console.warn(\"!!!key is null\");\n            return;\n        }\n        const ctrlIns = this._sigCtrlCache[key];\n        if (ctrlIns && ctrlIns.isInited) {\n            ctrlIns.onUpdate(updateData);\n        } else {\n            console.warn(` updateDpc key:${key},该实例没初始化`);;\n        }\n    }\n    public hideDpc(key: string) {\n        if (!key) {\n            console.warn(\"!!!key is null\");\n            return;\n        }\n        const dpcIns = this._sigCtrlCache[key];\n        if (!dpcIns) {\n            console.warn(`${key} 没实例化`);\n            return;\n        }\n        this.hideDpcByIns(dpcIns)\n    }\n\n    public destroyDpc(key: string, destroyRes?: boolean, destroyIns?: boolean) {\n        if (!key || key === \"\") {\n            console.warn(\"!!!key is null\");\n            return;\n        }\n        const ins = this._sigCtrlCache[key];\n        this.destroyDpcByIns(ins, destroyRes);\n        destroyIns && (delete this._sigCtrlCache[key])\n    }\n    public isShowing(key: string) {\n        if (!key) {\n            console.warn(\"!!!key is null\");\n            return;\n        }\n        const ins = this._sigCtrlCache[key];\n        if (ins) {\n            return ins.isShowing;\n        } else {\n            return false;\n        }\n    }\n    public isShowed(key: string): boolean {\n        if (!key) {\n            console.warn(\"!!!key is null\");\n            return;\n        }\n        const ins = this._sigCtrlCache[key];\n        if (ins) {\n            return ins.isShowed;\n        } else {\n            return false;\n        }\n    }\n    public isLoaded(key: string): boolean {\n        if (!key) {\n            console.warn(\"!!!key is null\");\n            return;\n        }\n        const ins = this._sigCtrlCache[key];\n        if (ins) {\n            return ins.isLoaded;\n        } else {\n            return false;\n        }\n    }\n    //基础操作函数\n\n    public insDpc<T extends displayCtrl.ICtrl = any>(keyCfg: string | displayCtrl.IKeyConfig): T {\n        keyCfg = this._getCfg(keyCfg);\n        const ctrlClass = this._ctrlClassMap[keyCfg.typeKey];\n        if (!ctrlClass) {\n            console.error(`实例,请先注册类:${keyCfg.typeKey}`);\n            return null;\n        }\n        const ins = new ctrlClass();\n        ins.key = keyCfg.key;\n        return ins as any;\n    }\n\n    public loadDpcByIns(dpcIns: displayCtrl.ICtrl, loadCfg: displayCtrl.ILoadConfig): void {\n        if (dpcIns) {\n            if (dpcIns.needLoad) {\n                dpcIns.isLoaded = false;\n            } else if (!dpcIns.isLoaded && !dpcIns.isLoading) {\n                dpcIns.needLoad = true;\n            }\n            if (dpcIns.needLoad) {\n                dpcIns.needLoad = false;\n                this._loadRess(dpcIns, loadCfg);\n            }\n        }\n    }\n    public initDpcByIns<T = any>(dpcIns: displayCtrl.ICtrl, initData?: T): void {\n        if (dpcIns) {\n            if (!dpcIns.isInited) {\n                dpcIns.isInited = true;\n                dpcIns.onInit && dpcIns.onInit(initData);\n            }\n        }\n    }\n    public showDpcByIns(dpcIns: displayCtrl.ICtrl, showCfg: displayCtrl.IShowConfig) {\n        if (dpcIns.needShow) {\n            if (dpcIns.isAsyncShow) {\n                if (dpcIns.isShowing) {\n                    dpcIns.forceHide();\n                    dpcIns.isShowing = false;\n                }\n                dpcIns.isShowing = true;\n                dpcIns.onShow(showCfg.onShowData, function () {\n                    dpcIns.isShowed = true;\n                    dpcIns.isShowing = false;\n                    showCfg.asyncShowedCb && showCfg.asyncShowedCb(dpcIns);\n                });\n            } else {\n                dpcIns.onShow(showCfg.onShowData);\n                dpcIns.isShowed = true;\n            }\n            showCfg.showedCb && showCfg.showedCb(dpcIns);\n        }\n        dpcIns.needShow = false;\n    }\n    public hideDpcByIns(dpcIns: displayCtrl.ICtrl) {\n        if (!dpcIns) return;\n        dpcIns.needShow = false;\n        dpcIns.onHide();\n        dpcIns.isShowing = false;\n        dpcIns.isShowed = false;\n    }\n    public destroyDpcByIns(dpcIns: displayCtrl.ICtrl, destroyRes?: boolean) {\n        if (!dpcIns) return;\n        if (dpcIns.isInited) {\n            dpcIns.isLoaded = false;\n            dpcIns.isInited = false;\n            dpcIns.needShow = false;\n        }\n        if (dpcIns.isShowed) {\n            this.hideDpcByIns(dpcIns);\n        }\n        dpcIns.onDestroy(destroyRes);\n    }\n    protected _getCfg<T = {}>(cfg: string | T): T {\n        if (typeof cfg === \"string\") {\n            cfg = { typeKey: cfg, key: cfg } as any;\n        }\n        if (!cfg[\"key\"]) {\n            cfg[\"key\"] = cfg[\"typeKey\"];\n        }\n        return cfg as T;\n    }\n\n    protected _loadRess(ctrlIns: displayCtrl.ICtrl, loadCfg: displayCtrl.ILoadConfig) {\n        if (ctrlIns) {\n            if (!ctrlIns.isLoaded) {\n                if (isNaN(loadCfg[\"loadCount\"])) {\n                    loadCfg[\"loadCount\"] = 0;\n                }\n                loadCfg[\"loadCount\"]++;\n                const onComplete = () => {\n                    loadCfg[\"loadCount\"]--;\n                    if (loadCfg[\"loadCount\"] === 0) {\n                        ctrlIns.isLoaded = true;\n                        ctrlIns.isLoading = false;\n                        loadCfg.loadCb(ctrlIns)\n                    }\n\n                }\n                const onError = () => {\n                    loadCfg[\"loadCount\"]--;\n                    if (loadCfg[\"loadCount\"] === 0) {\n                        ctrlIns.isLoaded = false;\n                        ctrlIns.isLoading = false;\n                        loadCfg.loadCb(null);\n                    }\n                }\n\n                const customLoadViewIns: displayCtrl.ICustomLoad = ctrlIns as any;\n                ctrlIns.isLoading = true;\n                ctrlIns.isLoaded = false;\n                if (customLoadViewIns.onLoad) {\n                    customLoadViewIns.onLoad(onComplete, onError);\n                } else if (this._resLoadHandler) {\n                    const ress = ctrlIns.getRess ? ctrlIns.getRess() : null;\n                    if (!ress || !ress.length) {\n                        onComplete();\n                        return;\n                    }\n                    this._resLoadHandler({\n                        key: ctrlIns.key,\n                        ress: ress,\n                        complete: onComplete,\n                        error: onError,\n                        onLoadData: loadCfg.onLoadData\n                    });\n                } else {\n                    ctrlIns.isLoaded = false;\n                    ctrlIns.isLoading = false;\n                    onError();\n                    console.error(`无法处理加载:${ctrlIns.key}`);\n                }\n            } else {\n                ctrlIns.isLoaded = true;\n                ctrlIns.isLoading = false;\n                loadCfg.loadCb && loadCfg.loadCb(ctrlIns);\n            }\n        }\n    }\n\n}"],"names":[],"mappings":"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"}