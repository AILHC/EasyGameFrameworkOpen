{"version":3,"file":"index.js","sources":["../../../src/base-dp-ctrl.ts","../../../src/dp-ctrl-mgr.ts"],"sourcesContent":["export class BaseDpCtrl<NodeType = any> implements displayCtrl.ICtrl<NodeType> {\n    protected _dpcMgr: displayCtrl.IMgr;\n    public key: string;\n    protected _node: NodeType;\n    constructor(dpcMgr?: displayCtrl.IMgr) {\n        this._dpcMgr = dpcMgr;\n    }\n\n    public needLoad: boolean = true;\n    public isLoaded: boolean = false;\n    public isLoading: boolean = false;\n    protected _isAsyncShow: boolean = false;\n\n    public isInited: boolean = false;\n    public isShowing: boolean = false;\n    public isShowed: boolean = false;\n    public needShow: boolean = false;\n    public get isAsyncShow() {\n        return this._isAsyncShow;\n    }\n    public onInit(initData?: any): void {\n    }\n    public onShow(showData?: any, endCb?: VoidFunction): void {\n        endCb && endCb();\n    }\n    public onUpdate(updateData?: any): void {\n    }\n    public getFace<T>(): T {\n        return this as any;\n    }\n    public onHide(): void {\n    }\n    public forceHide(): void {\n\n    }\n    public getNode() {\n        return this._node;\n    }\n    public onDestroy(destroyRes?: boolean): void {\n    }\n    public getRess(): string[] {\n        return null;\n    }\n}","/**\n * DisplayControllerMgr\n * 显示控制类管理器基类\n */\nexport class DpcMgr<CtrlKeyMap = any> implements displayCtrl.IMgr<CtrlKeyMap> {\n    ctrls: CtrlKeyMap = new Proxy({}, {\n        get(target, key) {\n            return key;\n        }\n    }) as any;\n    /**\n     * 单例缓存字典 key:ctrlKey,value:egf.IDpCtrl\n     */\n    protected _sigCtrlCache: displayCtrl.CtrlInsMap = {};\n    protected _sigCtrlShowCfgMap: { [key: string]: displayCtrl.IShowConfig } = {};\n    protected _resLoadHandler: displayCtrl.ResLoadHandler;\n    /**\n     * 控制器类字典\n     */\n    protected _ctrlClassMap: { [key: string]: displayCtrl.CtrlClassType<displayCtrl.ICtrl> } = {};\n    public get sigCtrlCache(): displayCtrl.CtrlInsMap {\n        return this._sigCtrlCache;\n    }\n    public getCtrlClass(typeKey: string): displayCtrl.CtrlClassType<displayCtrl.ICtrl> {\n        const clas = this._ctrlClassMap[typeKey];\n        return clas;\n    }\n    public init(resLoadHandler?: displayCtrl.ResLoadHandler): void {\n        if (!this._resLoadHandler) {\n            this._resLoadHandler = resLoadHandler;\n        }\n    }\n    public registTypes(classes: displayCtrl.CtrlClassMap | displayCtrl.CtrlClassType[]) {\n        if (classes) {\n            if (typeof classes.length === \"number\" && classes.length) {\n                for (let i = 0; i < classes.length; i++) {\n                    this.regist(classes[i]);\n                }\n            } else {\n                for (const typeKey in classes) {\n                    this.regist(classes[typeKey], typeKey)\n                }\n            }\n\n        }\n\n    }\n    public regist(ctrlClass: displayCtrl.CtrlClassType, typeKey?: string) {\n        const classMap = this._ctrlClassMap;\n        if (!ctrlClass.typeKey) {\n            if (!typeKey) {\n                console.error(`typeKey is null`);\n                return;\n            } else {\n                (ctrlClass as any)[\"typeKey\"] = typeKey;\n            }\n        }\n        if (classMap[ctrlClass.typeKey]) {\n            console.error(`type:${ctrlClass.typeKey} is exit`);\n        } else {\n            classMap[ctrlClass.typeKey] = ctrlClass;\n        }\n    }\n    public isRegisted(typeKey: string) {\n        return !!this._ctrlClassMap[typeKey];\n    }\n\n    //单例操作\n\n    public getSigDpcRess(typeKey: string): string[] {\n        const ctrlIns = this.getSigDpcIns(typeKey);\n        if (ctrlIns) {\n            return ctrlIns.getRess();\n        }\n        return null;\n    }\n    public loadSigDpc<T extends displayCtrl.ICtrl = any>(loadCfg: string | displayCtrl.ILoadConfig): T {\n        loadCfg = this._getCfg(loadCfg);\n        const ctrlIns = this.getSigDpcIns(loadCfg);\n        if (ctrlIns) {\n            this.loadDpcByIns(ctrlIns, loadCfg);\n        }\n        return ctrlIns as any;\n    }\n    public getSigDpcIns<T extends displayCtrl.ICtrl = any>(cfg: string | displayCtrl.IKeyConfig): T {\n        cfg = this._getCfg(cfg);\n        const sigCtrlCache = this._sigCtrlCache;\n        if (!cfg.key) return null;\n        let ctrlIns = sigCtrlCache[cfg.key];\n        if (!ctrlIns) {\n            ctrlIns = ctrlIns ? ctrlIns : this.insDpc(cfg);\n            ctrlIns && (sigCtrlCache[cfg.key] = ctrlIns);\n        }\n        return ctrlIns as any;\n    }\n    public initSigDpc<T extends displayCtrl.ICtrl = any>(cfg: string | displayCtrl.IInitConfig): T {\n        let ctrlIns: displayCtrl.ICtrl;\n        cfg = this._getCfg<displayCtrl.IInitConfig>(cfg);\n        ctrlIns = this.getSigDpcIns(cfg);\n        if (ctrlIns && ctrlIns.isLoaded && !ctrlIns.isInited) {\n            ctrlIns.onInit(cfg.onInitData);\n            ctrlIns.isInited = true;\n        }\n        return ctrlIns as any;\n    }\n    public showDpc<T extends displayCtrl.ICtrl = any>(showCfg: string | displayCtrl.IShowConfig): T {\n        showCfg = this._getCfg(showCfg);\n        const ins = this.getSigDpcIns(showCfg);\n        if (!ins) {\n            console.error(`没有注册:typeKey:${showCfg.typeKey}`);\n            return null;\n        };\n        const showTypeKey = ins.key;\n        if (ins.isShowed) {\n            return;\n        }\n        ins.needShow = true;\n        const sigCtrlShowCfgMap = this._sigCtrlShowCfgMap;\n        const oldShowCfg = sigCtrlShowCfgMap[ins.key];\n        if (oldShowCfg) {\n            oldShowCfg.onCancel && oldShowCfg.onCancel();\n            Object.assign(oldShowCfg, showCfg);\n        } else {\n            sigCtrlShowCfgMap[ins.key] = showCfg;\n        }\n        if (ins.needLoad) {\n            ins.isLoaded = false;\n        } else if (!ins.isLoaded && !ins.isLoading) {\n            ins.needLoad = true;\n        }\n        //需要加载\n        if (ins.needLoad) {\n            const preloadCfg = showCfg as displayCtrl.ILoadConfig;\n            preloadCfg.loadCb = (loadedIns) => {\n                const loadedShowCfg = sigCtrlShowCfgMap[showTypeKey];\n                if (loadedIns.needShow) {\n                    this.initDpcByIns(loadedIns, loadedShowCfg.onInitData);\n                    this.showDpcByIns(loadedIns, loadedShowCfg);\n                }\n                delete sigCtrlShowCfgMap[showTypeKey];\n            }\n            ins.needLoad = false;\n            this._loadRess(ins, preloadCfg);\n\n        } else {\n            if (!ins.isInited) {\n                this.initDpcByIns(ins, showCfg.onInitData);\n            }\n            if (ins.isInited) {\n                this.showDpcByIns(ins, showCfg);\n            }\n        }\n        return ins as T;\n    }\n    public updateDpc<K>(key: string, updateData?: K): void {\n        if (!key) {\n            console.warn(\"!!!key is null\");\n            return;\n        }\n        const ctrlIns = this._sigCtrlCache[key];\n        if (ctrlIns && ctrlIns.isInited) {\n            ctrlIns.onUpdate(updateData);\n        } else {\n            console.warn(` updateDpc key:${key},该实例没初始化`);;\n        }\n    }\n    public hideDpc(key: string) {\n        if (!key) {\n            console.warn(\"!!!key is null\");\n            return;\n        }\n        const dpcIns = this._sigCtrlCache[key];\n        if (!dpcIns) {\n            console.warn(`${key} 没实例化`);\n            return;\n        }\n        this.hideDpcByIns(dpcIns)\n    }\n\n    public destroyDpc(key: string, destroyRes?: boolean, destroyIns?: boolean) {\n        if (!key || key === \"\") {\n            console.warn(\"!!!key is null\");\n            return;\n        }\n        const ins = this._sigCtrlCache[key];\n        this.destroyDpcByIns(ins, destroyRes);\n        destroyIns && (delete this._sigCtrlCache[key])\n    }\n    public isShowing(key: string) {\n        if (!key) {\n            console.warn(\"!!!key is null\");\n            return;\n        }\n        const ins = this._sigCtrlCache[key];\n        if (ins) {\n            return ins.isShowing;\n        } else {\n            return false;\n        }\n    }\n    public isShowed(key: string): boolean {\n        if (!key) {\n            console.warn(\"!!!key is null\");\n            return;\n        }\n        const ins = this._sigCtrlCache[key];\n        if (ins) {\n            return ins.isShowed;\n        } else {\n            return false;\n        }\n    }\n    public isLoaded(key: string): boolean {\n        if (!key) {\n            console.warn(\"!!!key is null\");\n            return;\n        }\n        const ins = this._sigCtrlCache[key];\n        if (ins) {\n            return ins.isLoaded;\n        } else {\n            return false;\n        }\n    }\n    //基础操作函数\n\n    public insDpc<T extends displayCtrl.ICtrl = any>(keyCfg: string | displayCtrl.IKeyConfig): T {\n        keyCfg = this._getCfg(keyCfg);\n        const ctrlClass = this._ctrlClassMap[keyCfg.typeKey];\n        if (!ctrlClass) {\n            console.error(`实例,请先注册类:${keyCfg.typeKey}`);\n            return null;\n        }\n        const ins = new ctrlClass();\n        ins.key = keyCfg.key;\n        return ins as any;\n    }\n\n    public loadDpcByIns(dpcIns: displayCtrl.ICtrl, loadCfg: displayCtrl.ILoadConfig): void {\n        if (dpcIns) {\n            if (dpcIns.needLoad) {\n                dpcIns.isLoaded = false;\n            } else if (!dpcIns.isLoaded && !dpcIns.isLoading) {\n                dpcIns.needLoad = true;\n            }\n            if (dpcIns.needLoad) {\n                dpcIns.needLoad = false;\n                this._loadRess(dpcIns, loadCfg);\n            }\n        }\n    }\n    public initDpcByIns<T = any>(dpcIns: displayCtrl.ICtrl, initData?: T): void {\n        if (dpcIns) {\n            if (!dpcIns.isInited) {\n                dpcIns.isInited = true;\n                dpcIns.onInit && dpcIns.onInit(initData);\n            }\n        }\n    }\n    public showDpcByIns(dpcIns: displayCtrl.ICtrl, showCfg: displayCtrl.IShowConfig) {\n        if (dpcIns.needShow) {\n            if (dpcIns.isAsyncShow) {\n                if (dpcIns.isShowing) {\n                    dpcIns.forceHide();\n                    dpcIns.isShowing = false;\n                }\n                dpcIns.isShowing = true;\n                dpcIns.onShow(showCfg.onShowData, function () {\n                    dpcIns.isShowed = true;\n                    dpcIns.isShowing = false;\n                    showCfg.asyncShowedCb && showCfg.asyncShowedCb(dpcIns);\n                });\n            } else {\n                dpcIns.onShow(showCfg.onShowData);\n                dpcIns.isShowed = true;\n            }\n            showCfg.showedCb && showCfg.showedCb(dpcIns);\n        }\n        dpcIns.needShow = false;\n    }\n    public hideDpcByIns(dpcIns: displayCtrl.ICtrl) {\n        if (!dpcIns) return;\n        dpcIns.needShow = false;\n        dpcIns.onHide();\n        dpcIns.isShowing = false;\n        dpcIns.isShowed = false;\n    }\n    public destroyDpcByIns(dpcIns: displayCtrl.ICtrl, destroyRes?: boolean) {\n        if (!dpcIns) return;\n        if (dpcIns.isInited) {\n            dpcIns.isLoaded = false;\n            dpcIns.isInited = false;\n            dpcIns.needShow = false;\n        }\n        if (dpcIns.isShowed) {\n            this.hideDpcByIns(dpcIns);\n        }\n        dpcIns.onDestroy(destroyRes);\n    }\n    protected _getCfg<T = {}>(cfg: string | T): T {\n        if (typeof cfg === \"string\") {\n            cfg = { typeKey: cfg, key: cfg } as any;\n        }\n        if (!cfg[\"key\"]) {\n            cfg[\"key\"] = cfg[\"typeKey\"];\n        }\n        return cfg as T;\n    }\n\n    protected _loadRess(ctrlIns: displayCtrl.ICtrl, loadCfg: displayCtrl.ILoadConfig) {\n        if (ctrlIns) {\n            if (!ctrlIns.isLoaded) {\n                if (isNaN(loadCfg[\"loadCount\"])) {\n                    loadCfg[\"loadCount\"] = 0;\n                }\n                loadCfg[\"loadCount\"]++;\n                const onComplete = () => {\n                    loadCfg[\"loadCount\"]--;\n                    if (loadCfg[\"loadCount\"] === 0) {\n                        ctrlIns.isLoaded = true;\n                        ctrlIns.isLoading = false;\n                        loadCfg.loadCb(ctrlIns)\n                    }\n\n                }\n                const onError = () => {\n                    loadCfg[\"loadCount\"]--;\n                    if (loadCfg[\"loadCount\"] === 0) {\n                        ctrlIns.isLoaded = false;\n                        ctrlIns.isLoading = false;\n                        loadCfg.loadCb(null);\n                    }\n                }\n\n                const customLoadViewIns: displayCtrl.ICustomLoad = ctrlIns as any;\n                ctrlIns.isLoading = true;\n                ctrlIns.isLoaded = false;\n                if (customLoadViewIns.onLoad) {\n                    customLoadViewIns.onLoad(onComplete, onError);\n                } else if (this._resLoadHandler) {\n                    const ress = ctrlIns.getRess ? ctrlIns.getRess() : null;\n                    if (!ress || !ress.length) {\n                        onComplete();\n                        return;\n                    }\n                    this._resLoadHandler({\n                        key: ctrlIns.key,\n                        ress: ress,\n                        complete: onComplete,\n                        error: onError,\n                        onLoadData: loadCfg.onLoadData\n                    });\n                } else {\n                    ctrlIns.isLoaded = false;\n                    ctrlIns.isLoading = false;\n                    onError();\n                    console.error(`无法处理加载:${ctrlIns.key}`);\n                }\n            } else {\n                ctrlIns.isLoaded = true;\n                ctrlIns.isLoading = false;\n                loadCfg.loadCb && loadCfg.loadCb(ctrlIns);\n            }\n        }\n    }\n\n}"],"names":[],"mappings":"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"}