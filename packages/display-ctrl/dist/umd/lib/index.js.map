{"version":3,"file":"index.js","sources":["../../../src/dp-ctrl-mgr.ts"],"sourcesContent":["/**\n * DisplayControllerMgr\n * 显示控制类管理器基类\n */\nexport class DpcMgr<\n    CtrlKeyMapType = any,\n    InitDataTypeMapType = any,\n    ShowDataTypeMapType = any,\n    UpdateDataTypeMapType = any>\n    implements displayCtrl.IMgr<\n    CtrlKeyMapType,\n    InitDataTypeMapType,\n    ShowDataTypeMapType,\n    UpdateDataTypeMapType> {\n\n\n    keys: CtrlKeyMapType = new Proxy({}, {\n        get(target, key) {\n            return key;\n        }\n    }) as any;\n    /**\n     * 单例缓存字典 key:ctrlKey,value:egf.IDpCtrl\n     */\n    protected _sigCtrlCache: displayCtrl.CtrlInsMap = {};\n    protected _sigCtrlShowCfgMap: { [P in keyof CtrlKeyMapType]: displayCtrl.IShowConfig } = {} as any;\n    protected _resHandler: displayCtrl.IResHandler;\n    /**\n     * 控制器类字典\n     */\n    protected _ctrlClassMap: { [P in keyof CtrlKeyMapType]: displayCtrl.CtrlClassType<displayCtrl.ICtrl> } = {} as any;\n    public get sigCtrlCache(): displayCtrl.CtrlInsMap {\n        return this._sigCtrlCache;\n    }\n    public getCtrlClass<keyType extends keyof CtrlKeyMapType>(typeKey: keyType) {\n        const clas = this._ctrlClassMap[typeKey];\n        return clas;\n    }\n    public init(resHandler?: displayCtrl.IResHandler): void {\n        if (!this._resHandler) {\n            this._resHandler = resHandler;\n        }\n    }\n    public registTypes(classes: displayCtrl.CtrlClassMap | displayCtrl.CtrlClassType[]) {\n        if (classes) {\n            if (typeof classes.length === \"number\" && classes.length) {\n                for (let i = 0; i < classes.length; i++) {\n                    this.regist(classes[i]);\n                }\n            } else {\n                for (const typeKey in classes) {\n                    this.regist(classes[typeKey], typeKey as any)\n                }\n            }\n\n        }\n\n    }\n    public regist(ctrlClass: displayCtrl.CtrlClassType, typeKey?: keyof CtrlKeyMapType): void {\n        const classMap = this._ctrlClassMap;\n        if (!ctrlClass.typeKey) {\n            if (!typeKey) {\n                console.error(`typeKey is null`);\n                return;\n            } else {\n                (ctrlClass as any)[\"typeKey\"] = typeKey;\n            }\n        }\n        if (classMap[ctrlClass.typeKey]) {\n            console.error(`type:${ctrlClass.typeKey} is exit`);\n        } else {\n            classMap[ctrlClass.typeKey] = ctrlClass;\n        }\n    }\n    public isRegisted<keyType extends keyof CtrlKeyMapType>(typeKey: keyType): boolean {\n        return !!this._ctrlClassMap[typeKey];\n    }\n    public getDpcRessInClass<keyType extends keyof CtrlKeyMapType>(typeKey: keyType): any[] | string[] {\n        const clas = this._ctrlClassMap[typeKey];\n        if (clas) {\n            return clas.ress;\n        } else {\n            console.error(`This class :${typeKey} is not registered `);\n            return undefined;\n        }\n    }\n    //单例操作\n\n    public getSigDpcRess<keyType extends keyof CtrlKeyMapType>(typeKey: keyType,): string[] {\n        const ctrlIns = this.getSigDpcIns(typeKey);\n        if (ctrlIns) {\n            return ctrlIns.getRess();\n        }\n        return null;\n    }\n    public loadSigDpc<T, keyType extends keyof CtrlKeyMapType = any>(typeKey: keyType, loadCfg?: displayCtrl.ILoadConfig): displayCtrl.ReturnCtrlType<T> {\n        const ctrlIns = this.getSigDpcIns(typeKey);\n        if (ctrlIns) {\n            this.loadDpcByIns(ctrlIns, loadCfg);\n        }\n        return ctrlIns as any;\n    }\n    public getSigDpcIns<T, keyType extends keyof CtrlKeyMapType = any>(typeKey: keyType): displayCtrl.ReturnCtrlType<T> {\n        const sigCtrlCache = this._sigCtrlCache;\n        if (!typeKey) return null;\n        let ctrlIns = sigCtrlCache[typeKey];\n        if (!ctrlIns) {\n            ctrlIns = ctrlIns ? ctrlIns : this.insDpc(typeKey);\n            ctrlIns && (sigCtrlCache[typeKey] = ctrlIns);\n        }\n        return ctrlIns as any;\n    }\n    public initSigDpc<T = any, keyType extends keyof CtrlKeyMapType = any>(\n        typeKey: keyType,\n        initCfg?: displayCtrl.IInitConfig<keyType, InitDataTypeMapType>\n    ): displayCtrl.ReturnCtrlType<T> {\n        let ctrlIns: displayCtrl.ICtrl;\n        ctrlIns = this.getSigDpcIns(typeKey);\n        this.initDpcByIns(ctrlIns, initCfg);\n        return ctrlIns as any;\n    }\n    public showDpc<T, keyType extends keyof CtrlKeyMapType = any>(\n        typeKey: keyType | displayCtrl.IShowConfig<keyType, InitDataTypeMapType, ShowDataTypeMapType>,\n        onShowData?: ShowDataTypeMapType[displayCtrl.ToAnyIndexKey<keyType, ShowDataTypeMapType>],\n        showedCb?: displayCtrl.CtrlInsCb<T>,\n        onInitData?: InitDataTypeMapType[displayCtrl.ToAnyIndexKey<keyType, InitDataTypeMapType>],\n        forceLoad?: boolean,\n        onLoadData?: any,\n        loadCb?: displayCtrl.CtrlInsCb,\n        showEndCb?: VoidFunction,\n        onCancel?: VoidFunction\n    ): displayCtrl.ReturnCtrlType<T> {\n        let showCfg: displayCtrl.IShowConfig<keyType>;\n        if (typeof typeKey == \"string\") {\n            showCfg = {\n                typeKey: typeKey,\n                onShowData: onShowData,\n                showedCb: showedCb,\n                onInitData: onInitData,\n                forceLoad: forceLoad,\n                onLoadData: onLoadData,\n                showEndCb: showEndCb,\n                loadCb: loadCb,\n                onCancel: onCancel\n            }\n        } else if (typeof typeKey === \"object\") {\n            showCfg = typeKey;\n            onShowData !== undefined && (showCfg.onShowData = onShowData);\n            showedCb !== undefined && (showCfg.showedCb = showedCb);\n            showEndCb !== undefined && (showCfg.showEndCb = showEndCb);\n            onInitData !== undefined && (showCfg.onInitData = onInitData);\n            forceLoad !== undefined && (showCfg.forceLoad = forceLoad);\n            onLoadData !== undefined && (showCfg.onLoadData = onLoadData);\n            loadCb !== undefined && (showCfg.loadCb = loadCb);\n            onCancel !== undefined && (showCfg.onCancel = onCancel);\n        } else {\n            console.warn(`unknown showDpc`, typeKey);\n            return;\n        }\n        const ins = this.getSigDpcIns(showCfg.typeKey as any);\n        if (!ins) {\n            console.error(`There is no registration :typeKey:${showCfg.typeKey}`);\n            return null;\n        };\n        ins.needShow = true;\n        const sigCtrlShowCfgMap = this._sigCtrlShowCfgMap;\n        const oldShowCfg = sigCtrlShowCfgMap[showCfg.typeKey];\n        if (oldShowCfg && showCfg) {\n            oldShowCfg.onCancel && oldShowCfg.onCancel();\n            Object.assign(oldShowCfg, showCfg);\n        } else {\n            sigCtrlShowCfgMap[showCfg.typeKey] = showCfg;\n        }\n        if (ins.needLoad || showCfg.forceLoad) {\n            ins.isLoaded = false;\n            ins.needLoad = true;\n        } else if (!ins.isLoaded && !ins.isLoading) {\n            ins.needLoad = true;\n        }\n        //需要加载\n        if (ins.needLoad) {\n            const preloadCfg = showCfg as displayCtrl.ILoadConfig;\n            const loadCb = preloadCfg.loadCb;\n            preloadCfg.loadCb = (loadedIns: displayCtrl.ICtrl) => {\n                loadCb && loadCb(loadedIns);\n                if (loadedIns) {\n                    const loadedShowCfg = sigCtrlShowCfgMap[showCfg.typeKey];\n                    if (loadedIns.needShow) {\n                        this.initDpcByIns(loadedIns, loadedShowCfg);\n                        this.showDpcByIns(loadedIns, loadedShowCfg);\n                        loadedIns.needShow = false;\n                    }\n                }\n                delete sigCtrlShowCfgMap[showCfg.typeKey];\n            }\n            ins.needLoad = false;\n            this._loadRess(ins, preloadCfg);\n        } else {\n            if (!ins.isInited) {\n                this.initDpcByIns(ins, showCfg.onInitData);\n            }\n\n            if (ins.isInited) {\n                this.showDpcByIns(ins, showCfg);\n                ins.needShow = false;\n\n            }\n        }\n        return ins as any;\n    }\n    public updateDpc<keyType extends keyof CtrlKeyMapType>(\n        key: keyType,\n        updateData?: UpdateDataTypeMapType[displayCtrl.ToAnyIndexKey<keyType, UpdateDataTypeMapType>]\n    ): void {\n        if (!key) {\n            console.warn(\"!!!key is null\");\n            return;\n        }\n        const ctrlIns = this._sigCtrlCache[key];\n        if (ctrlIns && ctrlIns.isInited) {\n            ctrlIns.onUpdate(updateData);\n        } else {\n            console.warn(` updateDpc key:${key}, The instance is not initialized`);;\n        }\n    }\n    public hideDpc<keyType extends keyof CtrlKeyMapType>(key: keyType): void {\n        if (!key) {\n            console.warn(\"!!!key is null\");\n            return;\n        }\n        const dpcIns = this._sigCtrlCache[key];\n        if (!dpcIns) {\n            console.warn(`${key} Not instantiate`);\n            return;\n        }\n        this.hideDpcByIns(dpcIns)\n    }\n\n    public destroyDpc<keyType extends keyof CtrlKeyMapType>(key: keyType, destroyRes?: boolean): void {\n        if (!key || key === \"\") {\n            console.warn(\"!!!key is null\");\n            return;\n        }\n        const ins = this._sigCtrlCache[key];\n        this.destroyDpcByIns(ins, destroyRes);\n        delete this._sigCtrlCache[key];\n    }\n    public isLoading<keyType extends keyof CtrlKeyMapType>(key: keyType): boolean {\n        if (!key) {\n            console.warn(\"!!!key is null\");\n            return;\n        }\n        const ins = this._sigCtrlCache[key];\n        return ins ? ins.isLoading : false;\n    }\n    public isLoaded<keyType extends keyof CtrlKeyMapType>(key: keyType): boolean {\n        if (!key) {\n            console.warn(\"!!!key is null\");\n            return;\n        }\n        const ins = this._sigCtrlCache[key];\n        return ins ? ins.isLoaded : false;\n    }\n    public isInited<keyType extends keyof CtrlKeyMapType>(key: keyType): boolean {\n        if (!key) {\n            console.warn(\"!!!key is null\");\n            return;\n        }\n        const ins = this._sigCtrlCache[key];\n        return ins ? ins.isInited : false;\n    }\n    public isShowed<keyType extends keyof CtrlKeyMapType>(key: keyType): boolean {\n        if (!key) {\n            console.warn(\"!!!key is null\");\n            return false;\n        }\n        const ins = this._sigCtrlCache[key];\n        return ins ? ins.isShowed : false;\n    }\n\n    //基础操作函数\n\n    public insDpc<T, keyType extends keyof CtrlKeyMapType = any>(typeKey: keyType): displayCtrl.ReturnCtrlType<T> {\n        const ctrlClass = this._ctrlClassMap[typeKey];\n        if (!ctrlClass) {\n            console.error(`Not instantiate:${typeKey}`);\n            return null;\n        }\n        const ins = new ctrlClass();\n        ins.key = typeKey as any;\n        return ins as any;\n    }\n\n    public loadDpcByIns(ins: displayCtrl.ICtrl, loadCfg?: displayCtrl.ILoadConfig): void {\n        if (ins) {\n            if (ins.needLoad || (loadCfg && loadCfg.forceLoad)) {\n                ins.isLoaded = false;\n                ins.needLoad = true;\n            } else if (!ins.isLoaded && !ins.isLoading) {\n                ins.needLoad = true;\n            }\n            if (ins.needLoad) {\n                ins.needLoad = false;\n                this._loadRess(ins, loadCfg);\n            }\n        }\n    }\n    public initDpcByIns<keyType extends keyof CtrlKeyMapType>(\n        ins: displayCtrl.ICtrl,\n        initCfg?: displayCtrl.IInitConfig<keyType, InitDataTypeMapType>): void {\n        if (ins) {\n            if (!ins.isInited) {\n                ins.isInited = true;\n                ins.onInit && ins.onInit(initCfg);\n            }\n        }\n    }\n    public showDpcByIns<keyType extends keyof CtrlKeyMapType>(\n        ins: displayCtrl.ICtrl,\n        showCfg?: displayCtrl.IShowConfig<keyType, InitDataTypeMapType, ShowDataTypeMapType>\n    ): void {\n        ins.onShow && ins.onShow(showCfg);\n        ins.isShowed = true;\n        showCfg.showedCb && showCfg.showedCb(ins);\n    }\n    public hideDpcByIns<T extends displayCtrl.ICtrl = any>(dpcIns: T) {\n        if (!dpcIns) return;\n        dpcIns.needShow = false;\n        dpcIns.onHide && dpcIns.onHide();\n        dpcIns.isShowed = false;\n    }\n    public destroyDpcByIns(dpcIns: displayCtrl.ICtrl, destroyRes?: boolean) {\n        if (!dpcIns) return;\n        if (dpcIns.isInited) {\n            dpcIns.isLoaded = false;\n            dpcIns.isInited = false;\n            dpcIns.needShow = false;\n        }\n        if (dpcIns.isShowed) {\n            this.hideDpcByIns(dpcIns);\n        }\n        dpcIns.onDestroy && dpcIns.onDestroy(destroyRes);\n        if (destroyRes) {\n            const customResHandler = dpcIns as unknown as displayCtrl.IResHandler;\n            if (customResHandler.releaseRes) {\n                customResHandler.releaseRes(dpcIns);\n            } else if (this._resHandler && this._resHandler.releaseRes) {\n                this._resHandler.releaseRes(dpcIns);\n            }\n        }\n    }\n\n    protected _loadRess(ctrlIns: displayCtrl.ICtrl, loadCfg?: displayCtrl.ILoadConfig) {\n        if (ctrlIns) {\n            if (!ctrlIns.isLoaded) {\n                const loadHandler: displayCtrl.ILoadHandler = loadCfg ? loadCfg : {} as any;\n                if (isNaN(loadHandler.loadCount)) {\n                    loadHandler.loadCount = 0;\n                }\n                loadHandler.loadCount++;\n                const onComplete = () => {\n                    loadHandler.loadCount--;\n                    if (loadHandler.loadCount === 0) {\n                        ctrlIns.isLoaded = true;\n                        ctrlIns.isLoading = false;\n                        loadCfg && loadCfg?.loadCb(ctrlIns)\n                    }\n\n                }\n                const onError = () => {\n                    loadHandler.loadCount--;\n                    if (loadHandler.loadCount === 0) {\n                        ctrlIns.isLoaded = false;\n                        ctrlIns.isLoading = false;\n                        loadCfg && loadCfg?.loadCb(null);\n                    }\n                }\n\n                const customLoadViewIns: displayCtrl.IResHandler = ctrlIns as any;\n                ctrlIns.isLoading = true;\n                ctrlIns.isLoaded = false;\n                let onLoadData = loadCfg && loadCfg.onLoadData;\n                onLoadData =\n                    ctrlIns.onLoadData\n                        ? Object.assign(ctrlIns.onLoadData, onLoadData)\n                        : onLoadData;\n                if (customLoadViewIns.loadRes) {\n                    customLoadViewIns.loadRes({\n                        key: ctrlIns.key,\n                        complete: onComplete,\n                        error: onError,\n                        onLoadData: onLoadData\n                    });\n                } else if (this._resHandler) {\n                    const ress = ctrlIns.getRess ? ctrlIns.getRess() : null;\n                    if (!ress || !ress.length) {\n                        onComplete();\n                        return;\n                    }\n                    this._resHandler.loadRes({\n                        key: ctrlIns.key,\n                        ress: ress,\n                        complete: onComplete,\n                        error: onError,\n                        onLoadData: onLoadData\n                    });\n                } else {\n                    ctrlIns.isLoaded = false;\n                    ctrlIns.isLoading = false;\n                    onError();\n                    console.error(`load fail:${ctrlIns.key}`);\n                }\n            } else {\n                ctrlIns.isLoaded = true;\n                ctrlIns.isLoading = false;\n                loadCfg && loadCfg?.loadCb(ctrlIns);\n            }\n        }\n    }\n\n}"],"names":[],"mappings":"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"}