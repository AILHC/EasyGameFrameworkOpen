{"version":3,"file":"index.js","sources":["../../../src/obj-pool.ts","../../../src/obj-pool-mgr.ts"],"sourcesContent":["export class BaseObjPool<T = any,\n    SignKeyAndOnGetDataMap = any, Sign extends keyof SignKeyAndOnGetDataMap = any>\n    implements objPool.IPool<T, SignKeyAndOnGetDataMap, Sign> {\n    private _poolObjs: T[];\n    private _usedObjMap: Map<T, T>;\n    public get poolObjs(): T[] {\n        return this._poolObjs;\n    }\n    private _sign: Sign;\n    public get sign(): Sign {\n        return this._sign;\n    }\n    private _createFunc: (...args) => T;\n    protected _objHandler: objPool.IObjHandler;\n    public get size(): number {\n        const poolObjs = this._poolObjs;\n        return poolObjs ? poolObjs.length : 0;\n    }\n    public get usedCount(): number {\n        return this._usedObjMap ? this._usedObjMap.size : 0;\n    }\n    public threshold: number;\n    public init(opt: objPool.IPoolInitOption<T, SignKeyAndOnGetDataMap, Sign>): objPool.IPool<T, SignKeyAndOnGetDataMap, Sign> {\n        if (!this._sign) {\n            if (!opt.sign) {\n                console.log(`[objPool] sign is undefind`);\n                return;\n            }\n            if (!opt.createFunc && !opt.clas) {\n                console.error(`[objPool] sign:${opt.sign}  no createFunc and class`);\n                return;\n            }\n            this._sign = opt.sign;\n            this._poolObjs = [];\n            this._usedObjMap = new Map();\n            this.threshold = opt.threshold;\n            const clas = opt.clas;\n            if (opt.createFunc) {\n                this._createFunc = opt.createFunc;\n            } else if (opt.clas) {\n                this._createFunc = function () {\n                    return new clas();\n                };\n            }\n            this._objHandler = opt.objHandler;\n        } else {\n            this._loghasInit();\n        }\n        return this;\n    }\n    public initByFunc(sign: Sign, createFunc: () => T): objPool.IPool<T, SignKeyAndOnGetDataMap, Sign> {\n        if (!this._sign) {\n            this._sign = sign as any;\n            this._poolObjs = [];\n            this._usedObjMap = new Map();\n            this._createFunc = createFunc;\n        } else {\n            this._loghasInit();\n        }\n        return this;\n    }\n    public initByClass(sign: Sign, clas: objPool.Clas<T>): objPool.IPool<T, SignKeyAndOnGetDataMap, Sign> {\n        if (!this._sign) {\n            this._sign = sign as any;\n            this._poolObjs = [];\n            this._usedObjMap = new Map();\n            this._createFunc = function () {\n                return new clas();\n            };\n        } else {\n            this._loghasInit();\n        }\n        return this;\n    }\n    public setObjHandler(objHandler: objPool.IObjHandler<SignKeyAndOnGetDataMap[Sign]>): void {\n        this._objHandler = objHandler;\n    }\n\n    public preCreate(num: number) {\n        if (!this._sign) {\n            this._logNotInit();\n            return;\n        }\n        const poolObjs = this._poolObjs;\n        let obj: objPool.IObj;\n        const handler = this._objHandler;\n        for (let i = 0; i < num; i++) {\n            obj = this._createFunc();\n            if (obj && obj.onCreate) {\n                obj.onCreate(this);\n            } else if (handler && handler.onCreate) {\n                handler.onCreate(obj);\n            }\n            obj.poolSign = this._sign as string;\n            obj.isInPool = true;\n            poolObjs.push(obj as T);\n        }\n    }\n    public clear(): void {\n        const poolObjs = this.poolObjs;\n        if (poolObjs) {\n            let poolObj: objPool.IObj;\n            for (let i = 0; i < poolObjs.length; i++) {\n                poolObj = poolObjs[i];\n                this.kill(poolObj as any);\n            }\n            poolObjs.length = 0;\n        }\n    }\n    public kill(obj: T extends objPool.IObj ? T : any): void {\n        if (this._usedObjMap.has(obj)) {\n            const handler = this._objHandler;\n            if (obj.onFree) {\n                obj.onFree();\n            } else if (handler && handler.onFree) {\n                handler.onFree(obj);\n            }\n            this._usedObjMap.delete(obj);\n        }\n        const handler = this._objHandler;\n        if (obj && obj.onKill) {\n            obj.onKill();\n        } else if (handler && handler.onKill) {\n            handler.onKill(obj);\n        }\n    }\n    public free(obj: T extends objPool.IObj ? T : any): void {\n        if (!this._sign) {\n            this._logNotInit();\n            return;\n        }\n        if (!obj.isInPool) {\n            const handler = this._objHandler;\n            if (this.threshold && this.size >= this.threshold) {\n                this.kill(obj);\n                return;\n            }\n            if (obj.onFree) {\n                obj.onFree();\n            } else if (handler && handler.onFree) {\n                handler.onFree(obj);\n            }\n            this._poolObjs.push(obj);\n            this._usedObjMap.delete(obj);\n        } else {\n            console.warn(`pool :${this._sign} obj is in pool`);\n        }\n    }\n    public freeAll() {\n        this._usedObjMap.forEach((value) => {\n            this.free(value as any);\n        });\n        this._usedObjMap.clear();\n    }\n    public get(onGetData?: SignKeyAndOnGetDataMap[Sign]): T {\n        if (!this._sign) {\n            this._logNotInit();\n            return;\n        }\n\n        let obj: objPool.IObj<SignKeyAndOnGetDataMap[Sign]>;\n        if (this.poolObjs.length) {\n            obj = this._poolObjs.pop();\n        } else {\n            obj = this._createFunc();\n            obj.onCreate && obj.onCreate(this);\n            obj.poolSign = this._sign as any;\n        }\n        this._usedObjMap.set(obj as T, obj as T);\n        obj.isInPool = false;\n        const handler = this._objHandler;\n        if (obj.onGet) {\n            obj.onGet(onGetData);\n        } else if (handler && handler.onGet) {\n            handler.onGet(obj, onGetData);\n        }\n        return obj as T;\n    }\n    public getMore(onGetData: SignKeyAndOnGetDataMap[Sign], num: number = 1): T[] {\n        const objs = [];\n        if (!isNaN(num) && num > 1) {\n            for (let i = 0; i < num; i++) {\n                objs.push(this.get(onGetData));\n            }\n        } else {\n            objs.push(this.get(onGetData));\n        }\n        return objs as T[];\n    }\n    private _loghasInit() {\n        console.warn(`objpool ${this._sign} already inited`);\n    }\n    private _logNotInit() {\n        console.error(`objpool is not init`);\n    }\n}\n","import { BaseObjPool } from \"./obj-pool\";\nconst logType = {\n    poolIsNull: \"objPool is null\",\n    poolExit: \"objPool is exit\",\n    signIsNull: \"sign is null\"\n};\nexport class ObjPoolMgr<SignKeyAndOnGetDataMap = any> implements objPool.IPoolMgr<SignKeyAndOnGetDataMap> {\n    private _poolDic: { [key in keyof SignKeyAndOnGetDataMap]: objPool.IPool<any> } = {} as any;\n    public setPoolThreshold<Sign extends keyof SignKeyAndOnGetDataMap = any>(sign: Sign, threshold: number): void {\n        const pool = this._poolDic[sign];\n        if (pool) {\n            pool.threshold = threshold;\n        } else {\n            this._log(`${logType.poolIsNull}:${sign}`);\n        }\n    }\n    public setPoolHandler<Sign extends keyof SignKeyAndOnGetDataMap = any>(sign: Sign, objHandler: objPool.IObjHandler<SignKeyAndOnGetDataMap[Sign]>): void {\n        const pool = this._poolDic[sign];\n        if (pool) {\n            pool.setObjHandler(objHandler);\n        } else {\n            this._log(logType.poolIsNull);\n        }\n    }\n    public createObjPool<Sign extends keyof SignKeyAndOnGetDataMap = any, T = any>(opt: objPool.IPoolInitOption<T, SignKeyAndOnGetDataMap, Sign>): BaseObjPool<T, SignKeyAndOnGetDataMap, Sign> {\n        const sign = opt.sign;\n        if (this.hasPool(sign)) {\n            this._log(`${logType.poolExit}${sign}`);\n            return;\n        }\n        if (sign && (sign as string).trim() !== \"\") {\n            let pool: objPool.IPool<any> = new BaseObjPool();\n            pool = pool.init(opt);\n            if (pool) {\n                this._poolDic[sign] = pool;\n            }\n            return pool as any;\n        } else {\n            this._log(`${logType.signIsNull}`);\n        }\n    }\n    public createByClass<Sign extends keyof SignKeyAndOnGetDataMap = any>(sign: Sign, cls: any): void {\n        if (this.hasPool(sign)) {\n            this._log(`${logType.poolExit}${sign}`);\n            return;\n        }\n        if (sign && (sign as string).trim() !== \"\") {\n            const pool = new BaseObjPool();\n            pool.initByClass(sign as string, cls);\n            this._poolDic[sign] = pool;\n        } else {\n            this._log(`${logType.signIsNull}`);\n        }\n    }\n    public createByFunc<Sign extends keyof SignKeyAndOnGetDataMap = any, T = any>(sign: Sign, createFunc: () => T): void {\n        if (this.hasPool(sign)) {\n            this._log(`${logType.poolExit}${sign}`);\n            return;\n        }\n        if (sign && (sign as string).trim() !== \"\") {\n            const pool = new BaseObjPool();\n            pool.initByFunc(sign as string, createFunc);\n            this._poolDic[sign] = pool;\n        } else {\n            this._log(`${logType.signIsNull}`);\n        }\n    }\n    public hasPool<Sign extends keyof SignKeyAndOnGetDataMap = any>(sign: Sign): boolean {\n        return !!this._poolDic[sign];\n    }\n    public getPool<Sign extends keyof SignKeyAndOnGetDataMap = any, T = any>(sign: Sign): objPool.IPool<T, SignKeyAndOnGetDataMap, Sign> {\n        return this._poolDic[sign] as any;\n    }\n    public clearPool<Sign extends keyof SignKeyAndOnGetDataMap = any>(sign: Sign): void {\n        const pool = this._poolDic[sign];\n        if (pool) {\n            pool.clear();\n        }\n    }\n    public destroyPool<Sign extends keyof SignKeyAndOnGetDataMap = any>(sign: Sign): void {\n        const poolDic = this._poolDic;\n        const pool = poolDic[sign];\n        if (pool) {\n            pool.clear();\n            poolDic[sign] = undefined;\n        } else {\n            this._log(`${logType.poolIsNull}${sign}`);\n        }\n    }\n    public preCreate<Sign extends keyof SignKeyAndOnGetDataMap = any>(sign: Sign, preCreateCount: number): void {\n        const pool = this._poolDic[sign];\n        if (pool) {\n            pool.preCreate(preCreateCount);\n        } else {\n            this._log(`${logType.poolIsNull}${sign}`);\n        }\n    }\n    public get<Sign extends keyof SignKeyAndOnGetDataMap = any, T = any>(\n        sign: Sign,\n        onGetData?: SignKeyAndOnGetDataMap[Sign]\n    ): T extends objPool.IObj<SignKeyAndOnGetDataMap[Sign]> ? T : objPool.IObj<SignKeyAndOnGetDataMap[Sign]> {\n        const pool = this._poolDic[sign];\n        return pool ? pool.get(onGetData) : undefined;\n    }\n    public getMore<Sign extends keyof SignKeyAndOnGetDataMap = any, T = any>(\n        sign: Sign,\n        onGetData?: SignKeyAndOnGetDataMap[Sign],\n        num?: number\n    ): T extends objPool.IObj<SignKeyAndOnGetDataMap[Sign]> ? T[] : objPool.IObj<SignKeyAndOnGetDataMap[Sign]>[] {\n        const pool = this._poolDic[sign];\n        return pool ? (pool.getMore(onGetData, num) as any) : undefined;\n    }\n    public getPoolObjsBySign<Sign extends keyof SignKeyAndOnGetDataMap = any, T = any>(sign: Sign): T extends objPool.IObj<SignKeyAndOnGetDataMap[Sign]> ? T[] : objPool.IObj<SignKeyAndOnGetDataMap[Sign]>[] {\n        const pool = this._poolDic[sign];\n\n        return pool ? (pool.poolObjs as any) : undefined;\n    }\n\n    public free(obj: any): void {\n        const pool = this._poolDic[obj.poolSign];\n        if (pool) {\n            pool.free(obj);\n        }\n    }\n    public freeAll<Sign extends keyof SignKeyAndOnGetDataMap = any>(sign: Sign): void {\n        const pool = this._poolDic[sign];\n        if (pool) {\n            pool.freeAll();\n        }\n    }\n    public kill(obj: any): void {\n        const pool = this._poolDic[obj.poolSign];\n        if (pool) {\n            pool.kill(obj);\n        }\n    }\n\n    private _log(msg: string, level: number = 1) {\n        const tagStr = \"[objPool.ObjPoolMgr]\";\n        switch (level) {\n            case 0:\n                console.log(tagStr + msg);\n                break;\n            case 1:\n                console.warn(tagStr + msg);\n            case 2:\n                console.error(tagStr + msg);\n            default:\n                console.log(tagStr + msg);\n                break;\n        }\n    }\n}\n"],"names":[],"mappings":"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"}