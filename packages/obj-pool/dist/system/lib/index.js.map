{"version":3,"file":"index.js","sources":["../../../src/obj-pool.ts","../../../src/obj-pool-mgr.ts"],"sourcesContent":["export class BaseObjPool<T = any, onGetDataType = any> implements objPool.IPool<T, onGetDataType> {\n    private _poolObjs: T[];\n    private _usedObjMap: Map<objPool.IObj, objPool.IObj>;\n    public get poolObjs(): T[] {\n        return this._poolObjs;\n    }\n    private _sign: string;\n    public get sign(): string {\n        return this._sign;\n    }\n    private _createFunc: (...args) => T;\n    protected _objHandler: objPool.IObjHandler;\n    public setObjHandler(objHandler: objPool.IObjHandler<onGetDataType>): void {\n        if (objHandler) {\n            objHandler.pool = this;\n            this._objHandler = objHandler;\n        }\n    }\n    public get size(): number {\n        const poolObjs = this._poolObjs;\n        return poolObjs ? poolObjs.length : 0;\n    }\n    public get usedCount(): number {\n        return this._usedObjMap ? this._usedObjMap.size : 0;\n    }\n    public threshold: number;\n    public init(opt: objPool.IPoolInitOption<T, onGetDataType, string>): objPool.IPool<T, onGetDataType> {\n        if (!this._sign) {\n            if (!opt.sign) {\n                console.log(`[objPool] sign is undefind`);\n                return;\n            }\n            if (!opt.createFunc && !opt.clas) {\n                console.error(`[objPool] sign:${opt.sign}  no createFunc and class`);\n                return;\n            }\n            this._sign = opt.sign;\n            this._poolObjs = [];\n            this._usedObjMap = new Map();\n            this.threshold = opt.threshold;\n            const clas = opt.clas;\n            if (opt.createFunc) {\n                this._createFunc = opt.createFunc;\n            } else if (opt.clas) {\n                this._createFunc = function () {\n                    return new clas();\n                };\n            }\n            this._objHandler = opt.objHandler;\n        } else {\n            this._loghasInit();\n        }\n        return this;\n    }\n    public initByFunc(sign: string, createFunc: () => T): objPool.IPool<T, onGetDataType> {\n        if (!this._sign) {\n            this._sign = sign as any;\n            this._poolObjs = [];\n            this._usedObjMap = new Map();\n            this._createFunc = createFunc;\n        } else {\n            this._loghasInit();\n        }\n        return this;\n    }\n    public initByClass(sign: string, clas: objPool.Clas<T>): objPool.IPool<T, onGetDataType> {\n        if (!this._sign) {\n            this._sign = sign as any;\n            this._poolObjs = [];\n            this._usedObjMap = new Map();\n            this._createFunc = function () {\n                return new clas();\n            };\n        } else {\n            this._loghasInit();\n        }\n        return this;\n    }\n\n    public preCreate(num: number) {\n        if (!this._sign) {\n            this._logNotInit();\n            return;\n        }\n        const poolObjs = this._poolObjs;\n        let obj: objPool.IObj;\n        const handler = this._objHandler;\n        for (let i = 0; i < num; i++) {\n            obj = this._createFunc() as any;\n            if (obj && obj.onCreate) {\n                obj.onCreate();\n            } else if (handler && handler.onCreate) {\n                handler.onCreate(obj);\n            }\n            obj.poolSign = this._sign as string;\n            obj.isInPool = true;\n            obj.pool = this;\n            poolObjs.push(obj as any);\n        }\n    }\n    public clear(): void {\n        const poolObjs = this.poolObjs;\n        if (poolObjs) {\n            let poolObj;\n            for (let i = 0; i < poolObjs.length; i++) {\n                poolObj = poolObjs[i];\n                this.kill(poolObj);\n            }\n            poolObjs.length = 0;\n        }\n    }\n    public kill(obj: T extends objPool.IObj ? T : any): void {\n        if (this._usedObjMap.has(obj)) {\n            const handler = this._objHandler;\n            if (obj.onReturn) {\n                obj.onReturn && obj.onReturn();\n            } else if (handler && handler.onReturn) {\n                handler.onReturn && handler.onReturn(obj);\n            }\n\n            this._usedObjMap.delete(obj);\n        }\n        const handler = this._objHandler;\n        if (obj && obj.onKill) {\n            obj.onKill();\n        } else if (handler && handler.onKill) {\n            handler.onKill(obj);\n        }\n        obj.isInPool = false;\n        if (obj.pool) {\n            obj.pool = undefined;\n        }\n    }\n    public return(obj: T extends objPool.IObj ? T : any): void {\n        if (!this._sign) {\n            this._logNotInit();\n            return;\n        }\n        if (!obj.isInPool) {\n            obj.isInPool = true;\n            const handler = this._objHandler;\n            if (this.threshold && this.size >= this.threshold) {\n                this.kill(obj);\n                return;\n            }\n            if (obj.onReturn) {\n                obj.onReturn && obj.onReturn();\n            } else if (handler && handler.onReturn) {\n                handler.onReturn && handler.onReturn(obj);\n            }\n\n            this._poolObjs.push(obj);\n            this._usedObjMap.delete(obj);\n        } else {\n            console.warn(`pool :${this._sign} obj is in pool`);\n        }\n    }\n    public returnAll(): void {\n        this._usedObjMap.forEach((value) => {\n            this.return(value as any);\n        });\n        this._usedObjMap.clear();\n    }\n    public get(onGetData?: onGetDataType): T {\n        if (!this._sign) {\n            this._logNotInit();\n            return;\n        }\n\n        let obj: objPool.IObj;\n        const handler = this._objHandler;\n        if (this.poolObjs.length) {\n            obj = this._poolObjs.pop() as any;\n        } else {\n            obj = this._createFunc() as any;\n            if (obj && obj.onCreate) {\n                obj.onCreate();\n            } else if (handler && handler.onCreate) {\n                handler.onCreate(obj);\n            }\n            obj.poolSign = this._sign as any;\n            obj.pool = this;\n        }\n        this._usedObjMap.set(obj, obj);\n        obj.isInPool = false;\n        if (obj.onGet) {\n            obj.onGet(onGetData);\n        } else if (handler && handler.onGet) {\n            handler.onGet(obj, onGetData);\n        }\n        return obj as any;\n    }\n    public getMore(onGetData: onGetDataType, num: number = 1): T[] {\n        const objs = [];\n        if (!isNaN(num) && num > 1) {\n            for (let i = 0; i < num; i++) {\n                objs.push(this.get(onGetData));\n            }\n        } else {\n            objs.push(this.get(onGetData));\n        }\n        return objs as T[];\n    }\n    private _loghasInit() {\n        console.warn(`objpool ${this._sign} already inited`);\n    }\n    private _logNotInit() {\n        console.error(`objpool is not init`);\n    }\n}\n","import { BaseObjPool } from \"./obj-pool\";\nconst logType = {\n    poolIsNull: \"objPool is null\",\n    poolExit: \"objPool is exit\",\n    signIsNull: \"sign is null\"\n};\nexport class ObjPoolMgr<SignKeyAndOnGetDataMap = any> implements objPool.IPoolMgr<SignKeyAndOnGetDataMap> {\n    private _poolDic: { [key in keyof SignKeyAndOnGetDataMap]: objPool.IPool<any> } = {} as any;\n    public setPoolThreshold<Sign extends keyof SignKeyAndOnGetDataMap = any>(sign: Sign, threshold: number): void {\n        const pool = this._poolDic[sign];\n        if (pool) {\n            pool.threshold = threshold;\n        } else {\n            this._log(`${logType.poolIsNull}:${sign}`);\n        }\n    }\n    public setPoolHandler<Sign extends keyof SignKeyAndOnGetDataMap = any>(\n        sign: Sign,\n        objHandler: objPool.IObjHandler<SignKeyAndOnGetDataMap[Sign]>\n    ): void {\n        const pool = this._poolDic[sign];\n        if (pool) {\n            pool.setObjHandler(objHandler);\n        } else {\n            this._log(logType.poolIsNull);\n        }\n    }\n    public createObjPool<Sign extends keyof SignKeyAndOnGetDataMap = any, T = any>(\n        opt: objPool.IPoolInitOption<T, SignKeyAndOnGetDataMap[Sign], Sign>\n    ): objPool.IPool<T, SignKeyAndOnGetDataMap[Sign]> {\n        const sign = opt.sign;\n        if (this.hasPool(sign)) {\n            this._log(`${logType.poolExit}${sign}`);\n            return;\n        }\n        if (sign && (sign as string).trim() !== \"\") {\n            let pool: objPool.IPool<any> = new BaseObjPool();\n            pool = pool.init(opt as any);\n            if (pool) {\n                this._poolDic[sign] = pool;\n            }\n            return pool as any;\n        } else {\n            this._log(`${logType.signIsNull}`);\n        }\n    }\n    public createByClass<Sign extends keyof SignKeyAndOnGetDataMap = any>(sign: Sign, cls: any): void {\n        if (this.hasPool(sign)) {\n            this._log(`${logType.poolExit}${sign}`);\n            return;\n        }\n        if (sign && (sign as string).trim() !== \"\") {\n            const pool = new BaseObjPool();\n            pool.initByClass(sign as string, cls);\n            this._poolDic[sign] = pool;\n        } else {\n            this._log(`${logType.signIsNull}`);\n        }\n    }\n    public createByFunc<Sign extends keyof SignKeyAndOnGetDataMap = any, T = any>(\n        sign: Sign,\n        createFunc: () => T\n    ): void {\n        if (this.hasPool(sign)) {\n            this._log(`${logType.poolExit}${sign}`);\n            return;\n        }\n        if (sign && (sign as string).trim() !== \"\") {\n            const pool = new BaseObjPool();\n            pool.initByFunc(sign as string, createFunc);\n            this._poolDic[sign] = pool;\n        } else {\n            this._log(`${logType.signIsNull}`);\n        }\n    }\n    public hasPool<Sign extends keyof SignKeyAndOnGetDataMap = any>(sign: Sign): boolean {\n        return !!this._poolDic[sign];\n    }\n    public getPool<Sign extends keyof SignKeyAndOnGetDataMap = any, T = any>(\n        sign: Sign\n    ): objPool.IPool<T, SignKeyAndOnGetDataMap[Sign]> {\n        return this._poolDic[sign] as any;\n    }\n    public clearPool<Sign extends keyof SignKeyAndOnGetDataMap = any>(sign: Sign): void {\n        const pool = this._poolDic[sign];\n        if (pool) {\n            pool.clear();\n        }\n    }\n    public destroyPool<Sign extends keyof SignKeyAndOnGetDataMap = any>(sign: Sign): void {\n        const poolDic = this._poolDic;\n        const pool = poolDic[sign];\n        if (pool) {\n            pool.clear();\n            poolDic[sign] = undefined;\n        } else {\n            this._log(`${logType.poolIsNull}${sign}`);\n        }\n    }\n    public preCreate<Sign extends keyof SignKeyAndOnGetDataMap = any>(sign: Sign, preCreateCount: number): void {\n        const pool = this._poolDic[sign];\n        if (pool) {\n            pool.preCreate(preCreateCount);\n        } else {\n            this._log(`${logType.poolIsNull}${sign}`);\n        }\n    }\n    public get<Sign extends keyof SignKeyAndOnGetDataMap = any, T = any>(\n        sign: Sign,\n        onGetData?: SignKeyAndOnGetDataMap[Sign]\n    ): T extends objPool.IObj<SignKeyAndOnGetDataMap[Sign]> ? T : objPool.IObj<SignKeyAndOnGetDataMap[Sign]> {\n        const pool = this._poolDic[sign];\n        return pool ? pool.get(onGetData) : undefined;\n    }\n    public getMore<Sign extends keyof SignKeyAndOnGetDataMap = any, T = any>(\n        sign: Sign,\n        onGetData?: SignKeyAndOnGetDataMap[Sign],\n        num?: number\n    ): T extends objPool.IObj<SignKeyAndOnGetDataMap[Sign]> ? T[] : objPool.IObj<SignKeyAndOnGetDataMap[Sign]>[] {\n        const pool = this._poolDic[sign];\n        return pool ? (pool.getMore(onGetData, num) as any) : undefined;\n    }\n    public getPoolObjsBySign<Sign extends keyof SignKeyAndOnGetDataMap = any, T = any>(\n        sign: Sign\n    ): T extends objPool.IObj<SignKeyAndOnGetDataMap[Sign]> ? T[] : objPool.IObj<SignKeyAndOnGetDataMap[Sign]>[] {\n        const pool = this._poolDic[sign];\n\n        return pool ? (pool.poolObjs as any) : undefined;\n    }\n    public return(obj: any): void {\n        const pool: objPool.IPool = this._poolDic[(obj as objPool.IObj).poolSign];\n        if (pool) {\n            pool.return(obj);\n        }\n    }\n    public returnAll<Sign extends keyof SignKeyAndOnGetDataMap = any>(sign: Sign): void {\n        const pool = this._poolDic[sign];\n        if (pool) {\n            pool.returnAll();\n        }\n    }\n    public kill(obj: any): void {\n        const pool = this._poolDic[obj.poolSign];\n        if (pool) {\n            pool.kill(obj);\n        }\n    }\n    private _log(msg: string, level: number = 1) {\n        const tagStr = \"[objPool.ObjPoolMgr]\";\n        switch (level) {\n            case 0:\n                console.log(tagStr + msg);\n                break;\n            case 1:\n                console.warn(tagStr + msg);\n            case 2:\n                console.error(tagStr + msg);\n            default:\n                console.log(tagStr + msg);\n                break;\n        }\n    }\n}\n"],"names":[],"mappings":"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"}