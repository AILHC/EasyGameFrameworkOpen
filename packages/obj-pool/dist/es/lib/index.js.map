{"version":3,"file":"index.js","sources":["../../../src/obj-pool.ts","../../../src/obj-pool-mgr.ts"],"sourcesContent":["export class BaseObjPool<T extends objPool.IObj = any, onGetDataType = any> implements objPool.IPool<T, onGetDataType> {\n\n    private _poolObjs: objPool.IObj[];\n    private _usedObjMap: Map<objPool.IObj, objPool.IObj>;\n    public get poolObjs(): objPool.IObj[] {\n        return this._poolObjs;\n    }\n    private _sign: string;\n    public get sign(): string {\n        return this._sign;\n    }\n    private _createFunc: (...args) => T;\n    protected _objHandler: objPool.IObjHandler;\n    public get size(): number {\n        const poolObjs = this._poolObjs;\n        return poolObjs ? poolObjs.length : 0;\n    }\n    public get usedCount(): number {\n        return this._usedObjMap ? this._usedObjMap.size : 0;\n    }\n    public initByFunc(sign: string, createFunc: () => T): objPool.IPool<T, onGetDataType> {\n        if (!this._sign) {\n            this._sign = sign;\n            this._poolObjs = [];\n            this._usedObjMap = new Map();\n            this._createFunc = createFunc;\n        } else {\n            this._loghasInit();\n        }\n        return this;\n\n    }\n    public initByClass(sign: string,\n        clas: objPool.Clas<T>): objPool.IPool<T, onGetDataType> {\n        if (!this._sign) {\n            this._sign = sign;\n            this._poolObjs = [];\n            this._usedObjMap = new Map();\n            this._createFunc = function () {\n                return new clas();\n            };\n        } else {\n            this._loghasInit();\n        }\n        return this;\n    }\n    public setObjHandler(objHandler: objPool.IObjHandler<onGetDataType>): void {\n        this._objHandler = objHandler;\n    }\n\n    public preCreate(num: number) {\n        if (!this._sign) {\n            this._logNotInit();\n            return;\n        }\n        const poolObjs = this._poolObjs;\n        let obj: objPool.IObj;\n        const handler = this._objHandler;\n        for (let i = 0; i < num; i++) {\n            obj = this._createFunc();\n            if (obj && obj.onCreate) {\n                obj.onCreate(this);\n            } else if (handler && handler.onCreate) {\n                handler.onCreate(obj);\n            }\n            obj.poolSign = this._sign;\n            obj.isInPool = true;\n            poolObjs.push(obj);\n        }\n    }\n    public clear(): void {\n        const poolObjs = this.poolObjs;\n        if (poolObjs) {\n            let poolObj: objPool.IObj;\n            for (let i = 0; i < poolObjs.length; i++) {\n                poolObj = poolObjs[i];\n                this.kill(poolObj as any);\n            }\n            poolObjs.length = 0;\n        }\n\n\n    }\n    public kill(obj: T extends objPool.IObj ? T : any): void {\n        if (this._usedObjMap.has(obj)) {\n            const handler = this._objHandler;\n            if (obj.onFree) {\n                obj.onFree();\n            } else if (handler && handler.onFree) {\n                handler.onFree(obj);\n            }\n            this._usedObjMap.delete(obj);\n        }\n        const handler = this._objHandler;\n        if (obj && obj.onKill) {\n            obj.onKill();\n        } else if (handler && handler.onKill) {\n            handler.onKill(obj);\n        }\n    }\n    public free(obj: T extends objPool.IObj ? T : any): void {\n        if (!this._sign) {\n            this._logNotInit();\n            return;\n        }\n        if (!obj.isInPool) {\n            const handler = this._objHandler;\n\n            if (obj.onFree) {\n                obj.onFree();\n            } else if (handler && handler.onFree) {\n                handler.onFree(obj);\n            }\n            this._poolObjs.push(obj);\n            this._usedObjMap.delete(obj);\n        } else {\n            console.warn(`pool :${this._sign} obj is in pool`);\n        }\n    }\n    public freeAll() {\n        this._usedObjMap.forEach((value) => {\n            this.free(value as any);\n        });\n        this._usedObjMap.clear();\n    }\n    public get(onGetData?: onGetDataType): T {\n        if (!this._sign) {\n            this._logNotInit();\n            return;\n        }\n\n        let obj: objPool.IObj;\n        if (this.poolObjs.length) {\n            obj = this._poolObjs.pop();\n        } else {\n            obj = this._createFunc();\n            obj.onCreate && obj.onCreate(this);\n            obj.poolSign = this._sign;\n        }\n        this._usedObjMap.set(obj, obj);\n        obj.isInPool = false;\n        const handler = this._objHandler;\n        if (obj.onGet) {\n            obj.onGet(onGetData);\n        } else if (handler && handler.onGet) {\n            handler.onGet(obj, onGetData);\n        }\n        return obj as T;\n    }\n    public getMore(onGetData?: onGetDataType, num: number = 1): T[] {\n        const objs = [];\n        if (!isNaN(num) && num > 1) {\n            for (let i = 0; i < num; i++) {\n                objs.push(this.get(onGetData));\n            }\n        } else {\n            objs.push(this.get(onGetData));\n        }\n        return objs as any;\n    }\n    private _loghasInit() {\n        console.warn(`对象池${this._sign}已经初始化`);\n    }\n    private _logNotInit() {\n        console.error(`对象池还没初始化`);\n    }\n}","import { BaseObjPool } from \"./obj-pool\";\nconst logType = {\n    poolIsNull: \"对象池不存在\",\n    poolExit: \"对象池已存在\",\n    signIsNull: \"sign is null\",\n};\nexport class ObjPoolMgr<SignType = any, GetDataType = any> implements objPool.IPoolMgr<SignType, GetDataType> {\n\n    private _poolDic: { [key in keyof SignType]: BaseObjPool<any> } = {} as any;\n    public setObjPoolHandler<keyType extends keyof SignType = any>(sign: keyType, objHandler: objPool.IObjHandler) {\n        const pool = this._poolDic[sign];\n        if (pool) {\n            pool.setObjHandler(objHandler);\n        }\n    }\n    public createByClass(sign: keyof SignType, cls: any): void {\n        if (this.hasPool(sign)) {\n            this._log(`${logType.poolExit}${sign}`);\n            return;\n        }\n        if (sign && (sign as string).trim() !== \"\") {\n            const pool = new BaseObjPool();\n            pool.initByClass(sign as string, cls);\n            this._poolDic[sign] = pool;\n        } else {\n            this._log(`${logType.signIsNull}`);\n        }\n    }\n    public createByFunc<T = any>(sign: keyof SignType, createFunc: () => T): void {\n        if (this.hasPool(sign)) {\n            this._log(`${logType.poolExit}${sign}`);\n            return;\n        }\n        if (sign && (sign as string).trim() !== \"\") {\n            const pool = new BaseObjPool();\n            pool.initByFunc(sign as string, createFunc);\n            this._poolDic[sign] = pool;\n        } else {\n            this._log(`${logType.signIsNull}`);\n        }\n    }\n    public hasPool(sign: keyof SignType): boolean {\n        return !!this._poolDic[sign];\n    }\n    public getPool<T = any>(sign: keyof SignType): objPool.IPool<T> {\n        return this._poolDic[sign] as any;\n    }\n    public clearPool(sign: keyof SignType): void {\n        const pool = this._poolDic[sign];\n        if (pool) {\n            pool.clear();\n        }\n    }\n    public destroyPool(sign: keyof SignType): void {\n        const poolDic = this._poolDic;\n        const pool = poolDic[sign];\n        if (pool) {\n            pool.clear();\n            poolDic[sign] = undefined;\n        } else {\n            this._log(`${logType.poolIsNull}${sign}`);\n        }\n    }\n    public preCreate(sign: keyof SignType, preCreateCount: number): void {\n        const pool = this._poolDic[sign];\n        if (pool) {\n            pool.preCreate(preCreateCount);\n        } else {\n            this._log(`${logType.poolIsNull}${sign}`);\n        }\n    }\n    public get<T = any, keyType extends keyof SignType = any>(\n        sign: keyType,\n        onGetData?: GetDataType[objPool.ToAnyIndexKey<keyType, GetDataType>]\n    ): T {\n        const pool = this._poolDic[sign];\n        return pool ? pool.get(onGetData) : undefined;\n    }\n    public getMore<T, keyType extends keyof SignType = any>(\n        sign: keyType,\n        onGetData?: GetDataType[objPool.ToAnyIndexKey<keyType, GetDataType>],\n        num?: number): T extends objPool.IObj ? T[] : objPool.IObj[] {\n        const pool = this._poolDic[sign];\n        return pool ? pool.getMore(onGetData, num) as any : undefined;\n    }\n    public getPoolObjsBySign<T extends objPool.IObj>(sign: keyof SignType): T extends objPool.IObj ? T[] : objPool.IObj[] {\n        const pool = this._poolDic[sign];\n\n        return pool ? pool.poolObjs as any : undefined;\n    }\n\n    public free(obj: objPool.IObj): void {\n        const pool = this._poolDic[obj.poolSign as keyof SignType];\n        if (pool) {\n            \n            pool.free(obj);\n        }\n    }\n    public freeAll(sign: keyof SignType) {\n        const pool = this._poolDic[sign];\n        if (pool) {\n            pool.freeAll();\n        }\n    }\n    public kill(obj: objPool.IObj): void {\n        const pool = this._poolDic[obj.poolSign as keyof SignType];\n        if (pool) {\n            \n            pool.kill(obj);\n        }\n    }\n\n\n\n    private _log(msg: string, level: number = 1) {\n        const tagStr = \"[对象池管理器]\";\n        switch (level) {\n            case 0:\n                console.log(tagStr + msg);\n                break;\n            case 1:\n                console.warn(tagStr + msg);\n            case 2:\n                console.error(tagStr + msg);\n            default:\n                console.log(tagStr + msg);\n                break;\n        }\n    }\n\n}"],"names":[],"mappings":"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"}