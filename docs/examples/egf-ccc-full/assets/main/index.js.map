{"version":3,"sources":["assets/tests/display-ctrl/view-ctrls/AnimView.ts","assets/src/AppMainComp.ts","assets/tests/fairygui/views/BagView.ts","assets/tests/fairygui/views/CCLoadingView.ts","assets/tests/fairygui/views/CCNodeCtrl.ts","assets/tests/display-ctrl/view-ctrls/CustomResHandleView.ts","assets/src/DemoModule.ts","assets/tests/display-ctrl/view-ctrls/DepResView.ts","assets/tests/display-ctrl/DpcTestLayerType.ts","assets/tests/display-ctrl/DpcTestMainComp.ts","assets/tests/fairygui/FDpcTestLayerType.ts","assets/tests/fairygui/FDpcTestMainComp.ts","assets/src/FrameworkLoader.ts","assets/src/LayerType.ts","assets/test-main/ListItem.ts","assets/tests/display-ctrl/view-ctrls/LoadingView.ts","assets/src/ModuleMap.ts","assets/tests/display-ctrl/view-ctrls/MutiInsView.ts","assets/test-main/TestMain.ts","assets/src/Utils.ts","assets/tests/display-ctrl/setDpcTestModuleMap.ts","assets/tests/fairygui/setFDpcTestModuleMap.ts","assets/tests/broadcast/testBroadcast.ts"],"names":["dpctrl_ccc_1","require","Utils_1","DpcTestLayerType_1","setDpcTestModuleMap_1","AnimView","_super","__extends","_this","apply","this","arguments","isAsyncShow","prototype","getRess","_ress","path","prefabUrl","type","cc","Prefab","onInit","call","node","getPrefabNodeByPath","_animComp","getComponent","Animation","onShow","config","dtM","layerMgr","addNodeToLayer","DpcTestLayerType","POP_UP_UI","play","once","EventType","FINISHED","console","log","showEndCb","onHide","stop","onDestroy","typeKey","NodeCtrl","exports","_a","_decorator","ccclass","property","egf_core_1","FrameworkLoader_1","ModuleMap_1","AppMainComp","onLoad","bootFramework","app","App","bootstrap","FrameworkLoader","sent","setModuleMap","moduleMap","init","window","m","__decorate","Component","default","dpctrl_fgui_1","FDpcTestLayerType_1","setFDpcTestModuleMap_1","BagView","onLoadData","showLoading","BufferAsset","fairygui","UIPackage","addPackage","createObject","asCom","list","getChild","asList","on","fgui","Event","CLICK_ITEM","onClickItem","itemRenderer","renderListItem","bind","setVirtual","numItems","closeBtn","onClick","fdtM","uiMgr","hideDpc","FDpcTestLayerType","UI","center","index","obj","icon","Math","floor","random","text","item","asLoader","url","FDpctrl","CCNodeCtrl_1","LoadingView","_tipsLabel","getChildByName","Label","string","onUpdate","data","finished","total","destroyRes","assetManager","releaseAsset","resources","get","CCNodeCtrl","dpcMgr","_mgr","active","getNode","updateData","getFace","destroy","forceHide","isShowed","onResize","CustomResHandleView","loadRes","showDpc","keys","showedCb","randomMonsterNameIndexs","getSomeRandomInt","_monsterNames","length","ress","_monsterIconRess","forEach","element","push","_monsterIconDir","SpriteFrame","TextAsset","loadAny","bundle","updateDpc","err","error","complete","releaseRes","monsterNodeA","monsterNodeB","monsterSpCompA","getComp","Sprite","spriteFrame","monsterSpCompB","NewClass","label","start","DepResView","Node","MOUSE_DOWN","key","display_ctrl_1","layer_1","CustomResHandleView_1","DepResView_1","LoadingView_1","obj_pool_1","AnimView_1","MutiInsView_1","globalType","NodeCtrlType","DpcTestMainComp","depResViewBtnsNode","undefined","ctrlBtns","_mutiInss","_app","DpcMgr","finish","items","ctrlIns","asset_1","res","LayerMgr","canvas","director","getScene","Layer","loadModule","objPoolMgr","ObjPoolMgr","setDpcTestModuleMap","registTypes","MutiInsView","tipsNode","_depResViewTipsLabel","zIndex","sortAllChildren","loadSigDpc","loadCb","initSigDpc","showDepResView","hideDepResView","destroyDepResView","destroyDpc","getDepResViewRess","getSigDpcIns","map","value","toString","preloadDepResViewRess","showAnimView","hideAnimView","showCustomResHandlerView","hideCustomResHandlerView","destroyCustomResHandlerView","createMutiInsView","isLoaded","_createMutiInsView","insDpc","initDpcByIns","showDpcByIns","onShowData","preStr","clickCount","destroyAllMutiInsView","i","destroyDpcByIns","loadABTest","loadBundle","onComplete","ABTestModuleType","showAbTestView","abtest","showABTestView","destroyAbTestView","BagView_1","CCLoadingView_1","FDpcTestMainComp","GRoot","create","FLayer","inst","setFDpcTestModuleMap","showBagView","onBoot","bootEnd","LayerType","ListItem","name","clickCallBack","_clickCallBack","_tips","tipsStr","getRandomArrayElements","EFFECT_UI","ListItem_1","TestMain","backBatn","casesContainer","loading","title","listItemPrefab","sceneList","game","addPersistRootNode","parent","initList","scenes","dict","startsWith","dirname","replace","scenename","basename","dirs","Object","sort","scenenames","j","instantiate","_onClickItem","addChild","loadScene","clickBack","Button","prefab","childrenCount","curNode","pathSplitStrs","split","reverse","nextNodeName_1","nodeIndex","findNodeIndex","pop","children","findIndex","arr","count","shuffled","slice","min","temp","max","abs","indexOf","broadcast_1","TestBroadcast","broadcastAEdit","reciveAOnceLabel","reciveALabel","clickListenATipsLabel","clickOffListenA","broadcastBEdit","reciveBLabel","clickListenBTipsLabel","clickOffListenB","broadcastCEdit","callbackCEdit","reciveCLabel","callbackCLabel","broadcastDEdit","clickGetDValueTipsLabel","listenDShowLabel","clickGetDValueShowLabel","_broadcast","Broadcast","listener","msg","onceTestAListener","off","testBListener","callback","callbackMsg","textLabel","trim","alert","broadcastA","broadcast","broadcastB","stickyBroadcast","broadcastC","broadcastD","EditBox"],"mappings":"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","sourcesContent":["import { NodeCtrl } from \"@ailhc/dpctrl-ccc\";\nimport { getPrefabNodeByPath } from \"../../../src/Utils\";\nimport { DpcTestLayerType } from \"../DpcTestLayerType\";\nimport { dtM } from \"../setDpcTestModuleMap\";\ndeclare global {\n    interface IDpcTestViewKeyMap {\n        AnimView: \"AnimView\"\n    }\n}\nexport class AnimView extends NodeCtrl {\n    static typeKey = \"AnimView\";\n    private static _ress: { path: string, type: any }[];\n    public static prefabUrl = \"display-ctrl-test-views/AnimView\";\n    getRess() {\n        if (!AnimView._ress) {\n            AnimView._ress = [\n                { path: AnimView.prefabUrl, type: cc.Prefab }\n            ]\n        }\n        return AnimView._ress;\n\n\n    }\n    public isAsyncShow: boolean = true;\n    private _animComp: cc.Animation;\n\n    onInit() {\n        super.onInit()\n        this.node = getPrefabNodeByPath(AnimView.prefabUrl);\n        this._animComp = this.node.getComponent(cc.Animation);\n\n    }\n    onShow(config: displayCtrl.IShowConfig) {\n        super.onShow()\n        dtM.layerMgr.addNodeToLayer(this.node, DpcTestLayerType.POP_UP_UI);\n        this._animComp.play(\"asyncViewShowAnimClip\", 0);\n\n        this._animComp.once(cc.Animation.EventType.FINISHED, () => {\n            console.log(`播放完成`);\n            config.showEndCb && config.showEndCb();\n        });\n\n    }\n    onHide() {\n        if (this._animComp) {\n            this._animComp.stop();\n        }\n        super.onHide();\n    }\n    onDestroy() {\n        super.onDestroy();\n    }\n}","const { ccclass, property } = cc._decorator;\nimport { App } from \"@ailhc/egf-core\";\nimport { FrameworkLoader } from \"./FrameworkLoader\";\nimport { m, setModuleMap } from \"./ModuleMap\";\n@ccclass\nexport default class AppMainComp extends cc.Component {\n    onLoad() {\n        this.bootFramework();\n    }\n    async bootFramework() {\n        const app = new App();\n        await app.bootstrap([new FrameworkLoader()]);\n\n        setModuleMap(app.moduleMap);\n\n        app.init();\n\n        window[\"m\"] = m; //方便调试用\n    }\n}\n","import { FDpctrl } from \"@ailhc/dpctrl-fgui\";\nimport { FDpcTestLayerType } from \"../FDpcTestLayerType\";\nimport { fdtM } from \"../setFDpcTestModuleMap\";\ndeclare global {\n    interface IFDpcTestViewKeyMap {\n        BagView: string;\n    }\n}\nexport class BagView extends FDpctrl<fairygui.GComponent> {\n    static typeKey = \"BagView\";\n    onLoadData: IDpcTestOnLoadData = { showLoading: true };\n    getRess() {\n        return [{ path: \"fairygui/UI/Bag\", type: cc.BufferAsset }, { path: \"fairygui/UI/Bag_atlas0\" }];\n    }\n    onInit() {\n        fairygui.UIPackage.addPackage(\"fairygui/UI/Bag\");\n        this.node = fairygui.UIPackage.createObject(\"Bag\", \"BagWin\").asCom;\n        super.onInit();\n        var list: fgui.GList = this.node.getChild(\"list\").asList;\n        list.on(fgui.Event.CLICK_ITEM, this.onClickItem, this);\n        list.itemRenderer = this.renderListItem.bind(this);\n        list.setVirtual();\n        list.numItems = 45;\n        const closeBtn = this.node.getChild(\"frame\").asCom.getChild(\"closeButton\");\n        closeBtn.onClick(() => {\n            fdtM.uiMgr.hideDpc(\"BagView\");\n        });\n    }\n    onShow() {\n        super.onShow();\n        fdtM.layerMgr.addNodeToLayer(this.node, FDpcTestLayerType.UI);\n        this.node.center();\n    }\n    private renderListItem(index: number, obj: fgui.GObject): void {\n        obj.icon = \"fairygui/Icons/i\" + Math.floor(Math.random() * 10);\n        obj.text = \"\" + Math.floor(Math.random() * 100);\n    }\n\n    private onClickItem(item: fgui.GObject): void {\n        this.node.getChild(\"n11\").asLoader.url = item.icon;\n        this.node.getChild(\"n13\").text = item.icon;\n    }\n}\n","import { getPrefabNodeByPath } from \"../../../src/Utils\";\nimport { FDpcTestLayerType } from \"../FDpcTestLayerType\";\nimport { fdtM } from \"../setFDpcTestModuleMap\";\nimport { CCNodeCtrl } from \"./CCNodeCtrl\";\ndeclare global {\n    interface IFDpcTestViewKeyMap {\n        LoadingView: \"LoadingView\";\n    }\n    interface IFDpcTestUpdateDataMap {\n        LoadingView: { finished: number; total: number };\n    }\n}\nexport class LoadingView extends CCNodeCtrl {\n    static typeKey: string = \"LoadingView\";\n    private static _ress: { path: string; type: any }[];\n    public static prefabUrl = \"display-ctrl-test-views/LoadingView\";\n    getRess() {\n        if (!LoadingView._ress) {\n            LoadingView._ress = [{ path: LoadingView.prefabUrl, type: cc.Prefab }];\n        }\n        return LoadingView._ress;\n    }\n    private _tipsLabel: cc.Label;\n    onInit() {\n        super.onInit();\n        this.node = getPrefabNodeByPath(LoadingView.prefabUrl);\n        this._tipsLabel = this.node.getChildByName(\"loadingTips\").getComponent(cc.Label);\n    }\n    onShow(config: displayCtrl.IShowConfig) {\n        super.onShow(config);\n        fdtM.layerMgr.addNodeToLayer(this.node, FDpcTestLayerType.POP_UP_UI);\n        this.node[\"$gobj\"].center();\n        this._tipsLabel.string = \"加载中...\";\n    }\n    onUpdate(data: IFDpcTestUpdateDataMap[\"LoadingView\"]) {\n        this._tipsLabel.string = `加载中${data.finished}/${data.total}...`;\n    }\n    onHide() {\n        super.onHide();\n    }\n    onDestroy(destroyRes?: boolean) {\n        if (destroyRes) {\n            cc.assetManager.releaseAsset(cc.resources.get<cc.Prefab>(LoadingView.prefabUrl, cc.Prefab));\n        }\n    }\n}\n","import {} from \"@ailhc/display-ctrl\";\nexport class CCNodeCtrl implements displayCtrl.ICtrl<cc.Node> {\n    key?: string | any;\n\n    isLoading?: boolean;\n    isLoaded?: boolean;\n    isInited?: boolean;\n    isShowed?: boolean;\n    needShow?: boolean;\n    needLoad?: boolean;\n    isShowing?: boolean;\n    visible: boolean;\n    onLoadData: any;\n    protected node: cc.Node;\n    protected _mgr: displayCtrl.IMgr;\n    constructor(dpcMgr?: displayCtrl.IMgr) {\n        this._mgr = dpcMgr;\n    }\n\n    onInit(config?: displayCtrl.IInitConfig<any, any>): void {}\n    onShow(config?: displayCtrl.IShowConfig<any, any, any>): void {\n        if (this.node) {\n            this.node.active = true;\n        }\n    }\n    getRess(): any[] | string[] {\n        return undefined;\n    }\n    getNode(): cc.Node {\n        return this.node;\n    }\n    onUpdate(updateData: any): void {}\n    getFace<T = any>(): T {\n        return this as any;\n    }\n    onDestroy(destroyRes?: boolean): void {\n        if (this.node) {\n            this.node.destroy();\n        }\n    }\n\n    onHide() {\n        if (this.node) {\n            this.node.active = false;\n        }\n    }\n    forceHide() {\n        this.node && (this.node.active = false);\n        this.isShowed = false;\n    }\n    onResize() {}\n}\n","import { NodeCtrl } from \"@ailhc/dpctrl-ccc\";\nimport { getChild, getComp, getPrefabNodeByPath, getRandomArrayElements, getSomeRandomInt } from \"../../../src/Utils\";\nimport { DpcTestLayerType } from \"../DpcTestLayerType\";\nimport { dtM } from \"../setDpcTestModuleMap\";\ndeclare global {\n    interface IDpcTestViewKeyMap {\n        CustomResHandleView: \"CustomResHandleView\"\n    }\n}\nexport class CustomResHandleView extends NodeCtrl implements displayCtrl.IResHandler {\n\n\n    static typeKey = \"CustomResHandleView\";\n    private static _ress: string[];\n    private static _monsterNames = [\"BuleMonster\", \"GreenMonster\", \"PurpleMonster\", \"RedMonster\", \"YellowMonster\"];\n    private static _monsterIconDir = \"monster_icon\";\n    private static prefabUrl: string = \"display-ctrl-test-views/CustomResHandleView\";\n    private _monsterIconRess: { path: string, type: any }[];\n    loadRes(config: displayCtrl.IResLoadConfig): void {\n        dtM.uiMgr.showDpc({\n            typeKey: dtM.uiMgr.keys.LoadingView,\n            showedCb: () => {\n                const randomMonsterNameIndexs = getSomeRandomInt(0, CustomResHandleView._monsterNames.length - 1, 2);\n                const ress = [];\n                this._monsterIconRess = ress;\n                randomMonsterNameIndexs.forEach(element => {\n                    ress.push({ path: CustomResHandleView._monsterIconDir + \"/\" + CustomResHandleView._monsterNames[element], type: cc.SpriteFrame });\n                });\n                ress.push({ path: CustomResHandleView.prefabUrl, type: cc.Prefab });\n                ress.push({ path: \"test-txts/txt1\", type: cc.TextAsset });\n                cc.assetManager.loadAny(ress, { bundle: \"resources\" }, (finished: number, total: number, item) => {\n                    dtM.uiMgr.updateDpc(dtM.uiMgr.keys.LoadingView,\n                        {\n                            finished: finished, total: total\n                        })\n                }, (err, data) => {\n                    if (err) {\n                        config.error();\n                    } else {\n                        config.complete();\n                    }\n                    dtM.uiMgr.hideDpc(\"LoadingView\");\n                });\n            }\n        })\n    }\n    releaseRes(): void {\n        cc.assetManager.releaseAsset(cc.resources.get(CustomResHandleView.prefabUrl));\n    }\n    onInit() {\n        super.onInit()\n        this.node = getPrefabNodeByPath(CustomResHandleView.prefabUrl);\n\n    }\n    onShow(config: displayCtrl.IShowConfig) {\n        super.onShow(config);\n        dtM.layerMgr.addNodeToLayer(this.node, DpcTestLayerType.POP_UP_UI);\n        const monsterNodeA = getChild(this.node, \"monsterA\");\n        const monsterNodeB = getChild(this.node, \"monsterB\");\n        const monsterSpCompA = getComp(monsterNodeA, cc.Sprite);\n        // monsterSpCompA.spriteFrame.setTexture(cc.resources.get(this._monsterIconRess[0], cc.SpriteFrame))\n        monsterSpCompA.spriteFrame = cc.resources.get(this._monsterIconRess[0].path, cc.SpriteFrame);\n        const monsterSpCompB = getComp(monsterNodeB, cc.Sprite);\n        monsterSpCompB.spriteFrame = cc.resources.get(this._monsterIconRess[1].path, cc.SpriteFrame);\n        // monsterSpCompB.spriteFrame.setTexture(cc.resources.get(this._monsterIconRess[1], cc.SpriteFrame));\n    }\n    onHide() {\n        super.onHide();\n    }\n    onDestroy(destroyRes?: boolean) {\n        super.onDestroy();\n        if (destroyRes) {\n            cc.assetManager.releaseAsset(cc.resources.get<cc.Prefab>(CustomResHandleView.prefabUrl, cc.Prefab));\n        }\n    }\n\n}","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    label: cc.Label = null;\r\n\r\n    @property\r\n    text: string = 'hello';\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n","import { NodeCtrl } from \"@ailhc/dpctrl-ccc\";\r\nimport { getPrefabNodeByPath } from \"../../../src/Utils\";\r\nimport { DpcTestLayerType } from \"../DpcTestLayerType\";\r\nimport { dtM } from \"../setDpcTestModuleMap\";\r\ndeclare global {\r\n    interface IDpcTestViewKeyMap {\r\n        DepResView: \"DepResView\"\r\n    }\r\n}\r\nexport class DepResView extends NodeCtrl {\r\n    static typeKey = \"DepResView\";\r\n    private static _ress: { path: string, type: any }[];\r\n    public static prefabUrl = \"display-ctrl-test-views/DepResView\";\r\n    onLoadData: IDpcTestOnLoadData = { showLoading: true };\r\n    getRess() {\r\n        if (!DepResView._ress) {\r\n            DepResView._ress = [\r\n                { path: DepResView.prefabUrl, type: cc.Prefab },\r\n                { path: \"test-txts/txt1\", type: cc.TextAsset }\r\n            ]\r\n        }\r\n        return DepResView._ress;\r\n    }\r\n    onInit() {\r\n        super.onInit()\r\n        this.node = getPrefabNodeByPath(DepResView.prefabUrl);\r\n        this.node.getChildByName(\"close-icon\").on(cc.Node.EventType.MOUSE_DOWN, () => {\r\n            dtM.uiMgr.hideDpc(this.key);\r\n        })\r\n\r\n    }\r\n    onShow(config: displayCtrl.IShowConfig) {\r\n        super.onShow(config);\r\n        dtM.layerMgr.addNodeToLayer(this.node, DpcTestLayerType.POP_UP_UI);\r\n    }\r\n    onHide() {\r\n        super.onHide();\r\n    }\r\n}","export enum DpcTestLayerType {\r\n    SCENE,\r\n    UI,\r\n    POP_UP_UI,\r\n    EFFECT_UI,\r\n    UNKNOW\r\n}","// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\nimport { DpcMgr } from \"@ailhc/display-ctrl\";\nimport { Layer, NodeCtrl } from \"@ailhc/dpctrl-ccc\";\nimport { App } from \"@ailhc/egf-core\";\nimport { LayerMgr } from \"@ailhc/layer\";\nimport { getChild, getComp, getSomeRandomInt } from \"../../src/Utils\";\nimport { DpcTestLayerType } from \"./DpcTestLayerType\";\nimport { dtM, setDpcTestModuleMap } from \"./setDpcTestModuleMap\";\nimport { CustomResHandleView } from \"./view-ctrls/CustomResHandleView\";\nimport { DepResView } from \"./view-ctrls/DepResView\";\nimport { LoadingView } from \"./view-ctrls/LoadingView\";\nimport { ObjPoolMgr } from \"@ailhc/obj-pool\";\nimport { AnimView } from \"./view-ctrls/AnimView\";\nimport { error } from \"console\";\nimport { MutiInsView } from \"./view-ctrls/MutiInsView\";\n\nconst { ccclass, property } = cc._decorator;\ndeclare global {\n    interface Window {\n        globalType: IGlobalType;\n    }\n    interface IGlobalType {\n        NodeCtrlType?: new () => NodeCtrl;\n    }\n}\nwindow.globalType = {} as any;\nwindow.globalType.NodeCtrlType = NodeCtrl;\ndeclare global {\n    interface IDpcTestViewKeyMap {}\n    interface IDpcTestModuleMap {\n        uiMgr: displayCtrl.IMgr<IDpcTestViewKeyMap, any, IDpcTestViewShowDataMap, IDpcTestUpdateDataMap>;\n        layerMgr: layer.IMgr<cc.Node>;\n        poolMgr: objPool.IPoolMgr;\n        abtest: InstanceType<IGlobalType[\"ABTestModuleType\"]>;\n    }\n    interface IDpcTestOnLoadData {\n        showLoading: boolean;\n    }\n}\n@ccclass\nexport default class DpcTestMainComp extends cc.Component {\n    private _app: App;\n    @property(cc.Node)\n    depResViewBtnsNode: cc.Node = undefined;\n\n    @property(cc.Node)\n    ctrlBtns: cc.Node = undefined;\n\n    private _depResViewTipsLabel: cc.Label;\n    onLoad() {\n        const app = new App<IDpcTestModuleMap>();\n        this._app = app;\n        const dpcMgr = new DpcMgr<IDpcTestViewKeyMap, any, IDpcTestViewShowDataMap>();\n\n        dpcMgr.init({\n            loadRes: (config) => {\n                const onLoadData: IDpcTestOnLoadData = config.onLoadData;\n                onLoadData?.showLoading && dtM.uiMgr.showDpc(\"LoadingView\");\n                cc.assetManager.loadAny(\n                    config.ress,\n                    { bundle: \"resources\" },\n                    (finish, total) => {\n                        console.log(`${config.key}加载中:${finish}/${total}`);\n                        onLoadData?.showLoading &&\n                            dtM.uiMgr.updateDpc(\"LoadingView\", { finished: finish, total: total });\n                    },\n                    (err, items) => {\n                        if (err) {\n                            console.error(`加载失败`, err);\n                            config.error && config.error();\n                        } else {\n                            config.complete && config.complete();\n                        }\n                        onLoadData?.showLoading && dtM.uiMgr.hideDpc(\"LoadingView\");\n                    }\n                );\n            },\n            releaseRes: (ctrlIns) => {\n                const ress = ctrlIns.getRess();\n                if (ress && ress.length) {\n                    let asset: cc.Asset;\n                    ress.forEach((res: { path: string }) => {\n                        asset = cc.resources.get(res.path);\n                        if (asset) {\n                            cc.assetManager.releaseAsset(asset);\n                        }\n                    });\n                }\n            }\n        });\n        const layerMgr = new LayerMgr<cc.Node>();\n        const canvas = cc.director.getScene().getChildByName(\"Canvas\");\n        // cc.game.addPersistRootNode(canvas);\n\n        layerMgr.init(DpcTestLayerType, Layer, null, canvas);\n        app.loadModule(layerMgr, \"layerMgr\");\n        app.loadModule(dpcMgr, \"uiMgr\");\n        const objPoolMgr = new ObjPoolMgr();\n        app.loadModule(objPoolMgr, \"poolMgr\");\n\n        app.bootstrap();\n        app.init();\n        setDpcTestModuleMap(app.moduleMap);\n        // window[\"dtM\"] = dtM;//控制台调试用\n        // TestView\n        // dpcMgr.regist(LoadingView);\n        dpcMgr.registTypes([LoadingView, AnimView, CustomResHandleView, DepResView, MutiInsView]);\n        const tipsNode = getChild(this.depResViewBtnsNode, \"depResStateTips\");\n        this._depResViewTipsLabel = getComp(tipsNode, cc.Label);\n        this.ctrlBtns.zIndex = 100;\n        this.ctrlBtns.sortAllChildren();\n        dtM.uiMgr.loadSigDpc(\"LoadingView\", {\n            loadCb: () => {\n                dtM.uiMgr.initSigDpc(\"LoadingView\");\n            }\n        });\n    }\n    start() {}\n    //····················测试接口······························\n    //DepResView 依赖资源界面接口调用\n    showDepResView() {\n        dtM.uiMgr.showDpc(dtM.uiMgr.keys.DepResView);\n    }\n    hideDepResView() {\n        dtM.uiMgr.hideDpc(dtM.uiMgr.keys.DepResView);\n    }\n    destroyDepResView() {\n        dtM.uiMgr.destroyDpc(dtM.uiMgr.keys.DepResView, true);\n    }\n    getDepResViewRess() {\n        const ress = dtM.uiMgr.getSigDpcIns(dtM.uiMgr.keys.DepResView)?.getRess();\n        if (ress) {\n            this._depResViewTipsLabel.string = (ress as any[])\n                .map((value) => {\n                    return value.path as string;\n                })\n                .toString();\n        }\n    }\n    preloadDepResViewRess() {\n        dtM.uiMgr.loadSigDpc(dtM.uiMgr.keys.DepResView);\n    }\n\n    //AnimView 带动画界面\n    showAnimView() {\n        dtM.uiMgr.showDpc({\n            typeKey: dtM.uiMgr.keys.AnimView,\n            showedCb: () => {\n                console.log(`${dtM.uiMgr.keys.AnimView}:显示完成`);\n            },\n            showEndCb: () => {\n                console.log(`${dtM.uiMgr.keys.AnimView}:显示结束`);\n            }\n        });\n    }\n    hideAnimView() {\n        dtM.uiMgr.hideDpc(dtM.uiMgr.keys.AnimView);\n    }\n\n    //CustomResHandlerView 自定义资源处理界面\n    showCustomResHandlerView() {\n        dtM.uiMgr.showDpc(dtM.uiMgr.keys.CustomResHandleView);\n    }\n    hideCustomResHandlerView() {\n        dtM.uiMgr.hideDpc(dtM.uiMgr.keys.CustomResHandleView);\n    }\n    destroyCustomResHandlerView() {\n        dtM.uiMgr.destroyDpc(dtM.uiMgr.keys.CustomResHandleView, true);\n    }\n\n    //MutiInsView 多实例界面\n    private _mutiInss: displayCtrl.ICtrl[] = [];\n    createMutiInsView() {\n        if (!dtM.uiMgr.isLoaded(dtM.uiMgr.keys.MutiInsView)) {\n            dtM.uiMgr.loadSigDpc(dtM.uiMgr.keys.MutiInsView, {\n                loadCb: (ctrlIns) => {\n                    this._createMutiInsView(ctrlIns);\n                }\n            });\n        } else {\n            this._createMutiInsView();\n        }\n    }\n    private _createMutiInsView(ctrlIns?: displayCtrl.ICtrl) {\n        if (!ctrlIns) {\n            ctrlIns = dtM.uiMgr.insDpc(dtM.uiMgr.keys.MutiInsView);\n        }\n        dtM.uiMgr.initDpcByIns(ctrlIns);\n        dtM.uiMgr.showDpcByIns<\"MutiInsView\">(ctrlIns, {\n            onShowData: { preStr: \"egf\", clickCount: getSomeRandomInt(0, 100, 1)[0] }\n        });\n        this._mutiInss.push(ctrlIns);\n    }\n    destroyAllMutiInsView() {\n        for (let i = 0; i < this._mutiInss.length; i++) {\n            dtM.uiMgr.destroyDpcByIns(this._mutiInss[i], true);\n        }\n        this._mutiInss.length = 0;\n        dtM.uiMgr.destroyDpc(dtM.uiMgr.keys.MutiInsView, true);\n    }\n\n    loadABTest() {\n        dtM.uiMgr.showDpc(\"LoadingView\");\n        dtM.uiMgr.updateDpc(\"LoadingView\", { finished: 0, total: 1 });\n        cc.assetManager.loadBundle(\"abtest\", (onComplete, bundle) => {\n            dtM.uiMgr.updateDpc(\"LoadingView\", { finished: 1, total: 1 });\n\n            this._app.loadModule(new window.globalType.ABTestModuleType(), \"abtest\");\n            dtM.uiMgr.hideDpc(\"LoadingView\");\n        });\n    }\n    showAbTestView() {\n        if (!dtM.abtest) {\n            console.error(`abtest模块还没加载`);\n        } else {\n            dtM.abtest.showABTestView();\n        }\n    }\n    destroyAbTestView() {\n        dtM.uiMgr.destroyDpc(\"ABTestView\", true);\n    }\n}\n","export enum FDpcTestLayerType {\n    SCENE,\n    UI,\n    POP_UP_UI,\n    EFFECT_UI,\n    UNKNOW\n}\n","// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\nimport { DpcMgr } from \"@ailhc/display-ctrl\";\nimport { FDpctrl, FLayer } from \"@ailhc/dpctrl-fgui\";\nimport { App } from \"@ailhc/egf-core\";\nimport { LayerMgr } from \"@ailhc/layer\";\nimport { FDpcTestLayerType } from \"./FDpcTestLayerType\";\nimport { fdtM, setFDpcTestModuleMap } from \"./setFDpcTestModuleMap\";\nimport { error } from \"console\";\nimport { BagView } from \"./views/BagView\";\nimport { LoadingView } from \"./views/CCLoadingView\";\n\nconst { ccclass, property } = cc._decorator;\n\ndeclare global {\n    interface IFDpcTestViewKeyMap {}\n    interface IFDpcTestViewShowDataMap {}\n    interface IFDpcTestUpdateDataMap {}\n    interface IFDpcTestModuleMap {\n        uiMgr: displayCtrl.IMgr<IFDpcTestViewKeyMap, any, IFDpcTestViewShowDataMap, IFDpcTestUpdateDataMap>;\n        layerMgr: layer.IMgr<fairygui.GComponent | cc.Node>;\n        poolMgr: objPool.IPoolMgr;\n    }\n    interface IFDpcTestOnLoadData {\n        showLoading: boolean;\n    }\n}\n@ccclass\nexport default class FDpcTestMainComp extends cc.Component {\n    private _app: App;\n\n    onLoad() {\n        const app = new App<IFDpcTestModuleMap>();\n        this._app = app;\n        const dpcMgr = new DpcMgr();\n\n        dpcMgr.init({\n            loadRes: (config) => {\n                const onLoadData: IDpcTestOnLoadData = config.onLoadData;\n                onLoadData?.showLoading && fdtM.uiMgr.showDpc(\"LoadingView\");\n                cc.assetManager.loadAny(\n                    config.ress,\n                    { bundle: \"resources\" },\n                    (finish, total) => {\n                        console.log(`${config.key}加载中:${finish}/${total}`);\n                        onLoadData?.showLoading &&\n                            fdtM.uiMgr.updateDpc(\"LoadingView\", { finished: finish, total: total });\n                    },\n                    (err, items) => {\n                        if (err) {\n                            console.error(`加载失败`, err);\n                            config.error && config.error();\n                        } else {\n                            config.complete && config.complete();\n                        }\n                        onLoadData?.showLoading && fdtM.uiMgr.hideDpc(\"LoadingView\");\n                    }\n                );\n            },\n            releaseRes: (ctrlIns) => {\n                const ress = ctrlIns.getRess();\n                if (ress && ress.length) {\n                    let asset: cc.Asset;\n                    ress.forEach((res: { path: string }) => {\n                        asset = cc.resources.get(res.path);\n                        if (asset) {\n                            cc.assetManager.releaseAsset(asset);\n                        }\n                    });\n                }\n            }\n        });\n        const layerMgr = new LayerMgr<fairygui.GComponent | cc.Node>();\n        // cc.game.addPersistRootNode(canvas);\n        fgui.GRoot.create();\n        layerMgr.init(FDpcTestLayerType, FLayer, null, fairygui.GRoot.inst);\n        app.loadModule(layerMgr, \"layerMgr\");\n        app.loadModule(dpcMgr, \"uiMgr\");\n\n        app.bootstrap();\n        app.init();\n        setFDpcTestModuleMap(app.moduleMap);\n\n        dpcMgr.registTypes([BagView, LoadingView]);\n        fdtM.uiMgr.loadSigDpc(\"LoadingView\", {\n            loadCb: () => {\n                fdtM.uiMgr.initSigDpc(\"LoadingView\");\n            }\n        });\n    }\n    start() {}\n    //····················测试接口······························\n    //DepResView 依赖资源界面接口调用\n    showBagView() {\n        fdtM.uiMgr.showDpc(\"BagView\");\n    }\n}\n","import { DpcMgr } from \"@ailhc/display-ctrl\";\r\nimport { Layer } from \"@ailhc/dpctrl-ccc\";\r\nimport { LayerMgr } from \"@ailhc/layer\";\r\nimport { LayerType } from \"./LayerType\";\r\nimport { ObjPoolMgr } from \"@ailhc/obj-pool\"\r\ndeclare global {\r\n    interface IModuleMap {\r\n        // uiMgr: displayCtrl.IMgr;\r\n        // layerMgr: egf.ILayerMgr;\r\n        // poolMgr: objPool.IPoolMgr;\r\n    }\r\n}\r\nexport class FrameworkLoader implements egf.IBootLoader {\r\n    onBoot(app: egf.IApp<IModuleMap>, bootEnd: egf.BootEndCallback): void {\r\n        // const dpcMgr = new DpcMgr();\r\n        // dpcMgr.init((config) => {\r\n        //     cc.resources.load(config.ress, null, (err, items) => {\r\n        //         if (err) {\r\n        //             config.error && config.error();\r\n        //         } else {\r\n        //             config.complete && config.complete();\r\n        //         }\r\n        //     })\r\n        // })\r\n        // const layerMgr = new LayerMgr<cc.Node>();\r\n        // const canvas = cc.director.getScene().getChildByName(\"Canvas\");\r\n        // cc.game.addPersistRootNode(canvas);\r\n        // layerMgr.init(canvas, LayerType, Layer);\r\n        // app.loadModule(layerMgr, \"layerMgr\");\r\n\r\n        // app.loadModule(dpcMgr, \"uiMgr\");\r\n        // const objPoolMgr = new ObjPoolMgr();\r\n        // app.loadModule(objPoolMgr, \"poolMgr\");\r\n        bootEnd(true);\r\n    }\r\n\r\n}","export enum LayerType {\r\n    SCENE,\r\n    UI,\r\n    POP_UP_UI,\r\n    EFFECT_UI,\r\n    UNKNOW\r\n}","// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class ListItem extends cc.Component {\n    @property(cc.Label)\n    label: cc.Label = null;\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {}\n\n    start() {}\n    private _clickCallBack: VoidFunction;\n    init(name: string, clickCallBack: VoidFunction) {\n        this.label.string = name;\n        this._clickCallBack = clickCallBack;\n    }\n    onClick() {\n        this._clickCallBack();\n    }\n\n    // update (dt) {}\n}\n","import { NodeCtrl } from \"@ailhc/dpctrl-ccc\";\r\nimport { getPrefabNodeByPath } from \"../../../src/Utils\";\r\nimport { DpcTestLayerType } from \"../DpcTestLayerType\";\r\nimport { dtM } from \"../setDpcTestModuleMap\";\r\ndeclare global {\r\n    interface IDpcTestViewKeyMap {\r\n        LoadingView: \"LoadingView\"\r\n    }\r\n    interface IDpcTestUpdateDataMap {\r\n        LoadingView: { finished: number, total: number }\r\n    }\r\n}\r\nexport class LoadingView extends NodeCtrl {\r\n    static typeKey: string = \"LoadingView\";\r\n    private static _ress: { path: string, type: any }[];\r\n    public static prefabUrl = \"display-ctrl-test-views/LoadingView\";\r\n    getRess() {\r\n        if (!LoadingView._ress) {\r\n            LoadingView._ress = [\r\n                { path: LoadingView.prefabUrl, type: cc.Prefab }\r\n            ]\r\n        }\r\n        return LoadingView._ress;\r\n\r\n\r\n    }\r\n    private _tipsLabel: cc.Label;\r\n    onInit() {\r\n        super.onInit()\r\n        this.node = getPrefabNodeByPath(LoadingView.prefabUrl);\r\n        this._tipsLabel = this.node.getChildByName(\"loadingTips\").getComponent(cc.Label);\r\n\r\n    }\r\n    onShow(config: displayCtrl.IShowConfig) {\r\n        super.onShow(config);\r\n        dtM.layerMgr.addNodeToLayer(this.node, DpcTestLayerType.POP_UP_UI);\r\n        this._tipsLabel.string = \"加载中...\";\r\n    }\r\n    onUpdate(data: IDpcTestUpdateDataMap[\"LoadingView\"]) {\r\n        this._tipsLabel.string = `加载中${data.finished}/${data.total}...`;\r\n    }\r\n    onHide() {\r\n        super.onHide();\r\n\r\n    }\r\n    onDestroy(destroyRes?: boolean) {\r\n        if (destroyRes) {\r\n            cc.assetManager.releaseAsset(cc.resources.get<cc.Prefab>(LoadingView.prefabUrl, cc.Prefab));\r\n        }\r\n    }\r\n}","declare global {\n    interface IModuleMap {\n        \n    }\n}\nexport let m: IModuleMap;\nexport function setModuleMap(moduleMap: IModuleMap) {\n    m = moduleMap;\n}","import { NodeCtrl } from \"@ailhc/dpctrl-ccc\";\r\nimport { getChild, getPrefabNodeByPath, getRandomArrayElements } from \"../../../src/Utils\";\r\nimport { DpcTestLayerType } from \"../DpcTestLayerType\";\r\nimport { dtM } from \"../setDpcTestModuleMap\";\r\ndeclare global {\r\n    interface IDpcTestViewKeyMap {\r\n        MutiInsView: \"MutiInsView\"\r\n    }\r\n    interface IDpcTestViewShowDataMap {\r\n        MutiInsView: { preStr: string, clickCount: number };\r\n    }\r\n}\r\nexport class MutiInsView extends NodeCtrl {\r\n    static typeKey: string = \"MutiInsView\";\r\n    public prefabUrl: string = \"display-ctrl-test-views/MutiInsView\";\r\n    private _tips: string[];\r\n    private _tipsLabel: cc.Label;\r\n    private _animComp: cc.Animation;\r\n    getRess() {\r\n        return [{ path: this.prefabUrl, type: cc.Prefab }] as any;\r\n    }\r\n    onInit() {\r\n        this._tips = [\r\n            \"老铁，O(∩_∩)O谢谢！\",\r\n            \"老铁，双击666\",\r\n            \"EasyGameFramework框架\",\r\n            \"跨引擎\",\r\n            \"高效易用\"\r\n\r\n        ]\r\n        this.node = getPrefabNodeByPath(this.prefabUrl);\r\n        const tipsNode = getChild(this.node, \"tips\");\r\n        this._tipsLabel = tipsNode.getComponent(cc.Label);\r\n        this._animComp = this.node.getComponent(cc.Animation);\r\n\r\n    }\r\n    onShow(config: displayCtrl.IShowConfig<\"MutiInsView\", any, IDpcTestViewShowDataMap>) {\r\n        super.onShow(config);\r\n        const tipsStr = getRandomArrayElements(this._tips, 1);\r\n        this._tipsLabel.string = `${config.onShowData.preStr}_${tipsStr}_x${config.onShowData.clickCount}`;\r\n        dtM.layerMgr.addNodeToLayer(this.node, DpcTestLayerType.EFFECT_UI);\r\n        this._animComp.play();\r\n        this._animComp.once(cc.Animation.EventType.FINISHED, () => {\r\n            this.onHide();\r\n        })\r\n    }\r\n}","// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport ListItem from \"./ListItem\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class TestMain extends cc.Component {\n    @property(cc.Button)\n    backBatn: cc.Button = null;\n\n    @property(cc.Node)\n    casesContainer: cc.Node = null;\n\n    @property(cc.Node)\n    loading: cc.Node = null;\n    // LIFE-CYCLE CALLBACKS:\n    @property(cc.Label)\n    title: cc.Label = null;\n    @property(cc.Prefab)\n    listItemPrefab: cc.Prefab = null;\n\n    sceneList: { name: string; url: string }[] = [];\n    onLoad() {\n        this.loading.active = false;\n    }\n\n    start() {\n        cc.game.addPersistRootNode(this.backBatn.node.parent);\n        this.initList();\n    }\n    initList() {\n        let scenes = cc.game[\"_sceneInfos\"];\n        console.log(scenes);\n        var dict = {};\n\n        if (scenes) {\n            for (let i = 0; i < scenes.length; ++i) {\n                let url = scenes[i].url;\n                if (!url.startsWith(\"db://assets/tests/\")) {\n                    continue;\n                }\n                let dirname = cc.path.dirname(url).replace(\"db://assets/tests/\", \"\");\n                let scenename = cc.path.basename(url, \".fire\");\n\n                if (!dirname) dirname = \"_root\";\n                if (!dict[dirname]) {\n                    dict[dirname] = {};\n                }\n                dict[dirname][scenename] = url;\n            }\n        } else {\n            cc.error(\"failed to get scene list!\");\n        }\n        console.log(dict);\n        let dirs = Object.keys(dict);\n        dirs.sort();\n        for (let i = 0; i < dirs.length; ++i) {\n            this.sceneList.push({\n                name: dirs[i],\n                url: null\n            });\n            let scenenames = Object.keys(dict[dirs[i]]);\n            scenenames.sort();\n            for (let j = 0; j < scenenames.length; ++j) {\n                let name = scenenames[j];\n                let url = dict[dirs[i]][name];\n                this.sceneList.push({ name, url });\n                const item = cc.instantiate(this.listItemPrefab).getComponent(ListItem);\n                item.init(name, this._onClickItem.bind(this, url));\n                this.casesContainer.addChild(item.node);\n            }\n        }\n    }\n    private _onClickItem(url: string) {\n        this.loading.active = true;\n        cc.director.loadScene(url, () => {\n            this.title.string = url;\n            this.casesContainer.parent.parent.active = false;\n            this.loading.active = false;\n        });\n    }\n    public clickBack() {\n        cc.director.loadScene(\"Main.fire\", () => {\n            this.title.string = \"TestMain\";\n\n            this.casesContainer.parent.parent.active = true;\n        });\n    }\n    // update (dt) {}\n}\n","export function getPrefabNodeByPath(path: string): cc.Node {\n    const prefab = cc.resources.get(path, cc.Prefab) as cc.Prefab;\n    return cc.instantiate(prefab);\n}\nexport function getChild(node: cc.Node, path: string): cc.Node {\n    if (node && node.childrenCount) {\n        let curNode = node;\n        const pathSplitStrs = path.split(\"/\");\n        pathSplitStrs.reverse();\n        let nextNodeName: string;\n        let nodeIndex: number = -1;\n        const findNodeIndex = function (value: cc.Node, index: number) {\n            if (value.name === nextNodeName) {\n                return true;\n            }\n        };\n        nextNodeName = pathSplitStrs.pop();\n        do {\n            nodeIndex = curNode.children.findIndex(findNodeIndex);\n            if (nodeIndex > -1) {\n                curNode = curNode.children[nodeIndex];\n            } else {\n                curNode = undefined;\n            }\n            nextNodeName = pathSplitStrs.pop();\n        } while (curNode && nextNodeName);\n        return curNode;\n    }\n}\n\nexport function getComp<T extends cc.Component>(node: cc.Node, type: { prototype: T } | string): T {\n    return node.getComponent(type as any);\n}\n/**\n * 从数组中抽取随机元素\n * @param arr\n * @param count\n */\nexport function getRandomArrayElements(arr, count) {\n    if (arr.length == 0 || count == 0 || count > arr.length) return;\n    var shuffled = arr.slice(0),\n        i = arr.length,\n        min = i - count,\n        temp,\n        index;\n    while (i-- > min) {\n        index = Math.floor((i + 1) * Math.random());\n        temp = shuffled[index];\n        shuffled[index] = shuffled[i];\n        shuffled[i] = temp;\n    }\n    return shuffled.slice(min);\n}\nexport function getSomeRandomInt(min: number, max: number, count: number): Array<number> {\n    let i,\n        value,\n        arr = [];\n    if (Math.abs(max - min) + 1 < count) {\n        count = Math.abs(max - min) + 1;\n    }\n    for (i = 0; i < count; i++) {\n        value = Math.floor(Math.random() * (max - min + 1) + min);\n        if (arr.indexOf(value) < 0) {\n            arr.push(value);\n        } else {\n            i--;\n        }\n    }\n    return arr;\n    // ELog.i(arr);;\n}\n","export let dtM: IDpcTestModuleMap;\r\nexport function setDpcTestModuleMap(moduleMap: IDpcTestModuleMap) {\r\n    dtM = moduleMap;\r\n}","export let fdtM: IFDpcTestModuleMap;\nexport function setFDpcTestModuleMap(moduleMap: IFDpcTestModuleMap) {\n    fdtM = moduleMap;\n}\n","// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport { Broadcast } from \"@ailhc/broadcast\"\nconst { ccclass, property } = cc._decorator;\ndeclare global {\n    interface ITestKey extends broadcast.IMsgKey {\n        testA: \"testA\",\n        testB: \"testB\",\n        testC: \"testC\",\n        testD: \"testD\",\n        //消息类型key提示\n        objTypeTest: \"objTypeTest\"\n    }\n    interface ITestValueType extends broadcast.IMsgValueType {\n        testA: string,\n        testB: string,\n        testC: string,\n        testD: string,\n        //对应消息类型的发消息和收消息的类型声明\n        objTypeTest: { a: number, b: string, c: boolean }\n\n    }\n    interface ITestResultType extends broadcast.IResultType {\n        testC: string,\n        //双向通信返回数据类型声明\n        objTypeTest: { callbackDataA: { hahah: string } }\n    }\n}\n@ccclass\nexport default class TestBroadcast extends cc.Component {\n    private _broadcast: Broadcast<ITestKey, ITestValueType, ITestResultType>\n\n    @property(cc.EditBox)\n    broadcastAEdit: cc.EditBox = null;\n    @property(cc.Label)\n    reciveAOnceLabel: cc.Label = null;\n    @property(cc.Label)\n    reciveALabel: cc.Label = null;\n    @property(cc.Label)\n    clickListenATipsLabel: cc.Label = null;\n    @property(cc.Node)\n    clickOffListenA: cc.Node = null;\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {}\n\n    @property(cc.EditBox)\n    broadcastBEdit: cc.EditBox = null;\n\n    @property(cc.Label)\n    reciveBLabel: cc.Label = null;\n    @property(cc.Label)\n    clickListenBTipsLabel: cc.Label = null;\n    @property(cc.Node)\n    clickOffListenB: cc.Node = null;\n\n    @property(cc.EditBox)\n    broadcastCEdit: cc.EditBox = null;\n    @property(cc.EditBox)\n    callbackCEdit: cc.EditBox = null;\n    @property(cc.Label)\n    reciveCLabel: cc.Label = null;\n    @property(cc.Label)\n    callbackCLabel: cc.Label = null;\n\n\n    @property(cc.EditBox)\n    broadcastDEdit: cc.EditBox = null;\n    @property(cc.Label)\n    clickGetDValueTipsLabel: cc.Label = null;\n    @property(cc.Label)\n    listenDShowLabel: cc.Label = null;\n    @property(cc.Label)\n    clickGetDValueShowLabel: cc.Label = null;\n\n    start() {\n        this._broadcast = new Broadcast<ITestKey, ITestValueType, ITestResultType>();\n        this._broadcast.on({\n            key: \"testA\",\n            listener: (msg) => {\n                this.reciveALabel.string = msg;\n            }\n        });\n        const onceTestAListener = (msg: string) => {\n            this.reciveAOnceLabel.string = msg;\n        };\n        this.clickListenATipsLabel.node.on(cc.Node.EventType.MOUSE_DOWN, () => {\n            this._broadcast.on({\n                key: \"testA\",\n                listener: onceTestAListener,\n                once: true\n            });\n        });\n        this.clickOffListenA.on(cc.Node.EventType.MOUSE_DOWN, () => {\n            this._broadcast.off(\"testA\", onceTestAListener);\n        });\n        \n\n        const testBListener = (msg: string) => {\n            this.reciveBLabel.string = msg;\n        };\n        this.clickListenBTipsLabel.node.on(cc.Node.EventType.MOUSE_DOWN, () => {\n            this._broadcast.on({\n                key: \"testB\",\n                listener: testBListener,\n            });\n        });\n        this.clickOffListenB.on(cc.Node.EventType.MOUSE_DOWN, () => {\n            this._broadcast.off(\"testB\", testBListener);\n        });\n\n        this._broadcast.on({\n            key: \"testC\",\n            listener: (msg: string, callback) => {\n                this.reciveCLabel.string = msg;\n                const callbackMsg = this.callbackCEdit.textLabel.string;\n                if (!callbackMsg || callbackMsg.trim() === \"\") {\n                    alert(`返回C消息为空,请输入消息`);\n                    return\n                }\n                callback && callback(callbackMsg);\n            }\n        });\n        this._broadcast.on(\n            {\n                key: \"testD\",\n                listener: (msg: string) => {\n                    this.listenDShowLabel.string = msg;\n                }\n            }\n        );\n        this.clickGetDValueTipsLabel.node.on(cc.Node.EventType.MOUSE_DOWN, () => {\n            const msg = this._broadcast.value(\"testD\");\n            this.clickGetDValueShowLabel.string = msg;\n        });\n    }\n    broadcastA() {\n        const msg = this.broadcastAEdit.textLabel.string;\n        if (!msg || msg.trim() === \"\") {\n            alert(`A消息为空,请输入消息`);\n            return\n        }\n        this._broadcast.broadcast(\"testA\", msg);\n    }\n    broadcastB() {\n        const msg = this.broadcastBEdit.textLabel.string;\n        if (!msg || msg.trim() === \"\") {\n            alert(`B消息为空,请输入消息`);\n            return\n        }\n        this._broadcast.stickyBroadcast(\"testB\", msg);\n    }\n    broadcastC() {\n        const msg = this.broadcastCEdit.textLabel.string;\n        if (!msg || msg.trim() === \"\") {\n            alert(`C消息为空,请输入消息`);\n            return\n        }\n\n        this._broadcast.broadcast(\"testC\", msg, (callbackMsg: string) => {\n            this.callbackCLabel.string = callbackMsg;\n        })\n    }\n    broadcastD() {\n        const msg = this.broadcastDEdit.textLabel.string;\n        if (!msg || msg.trim() === \"\") {\n            alert(`D消息为空,请输入消息`);\n            return\n        }\n\n        this._broadcast.broadcast(\"testD\", msg, null, true);\n    }\n\n    // update (dt) {}\n}\n"],"file":"index.js"}